//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace ecmfiles.ECMDocService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DocumentServiceServiceSoapBinding", Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class DocumentServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getDocumentApprovalHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentApprovalStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback restoreDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback approveDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback destroyDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateIntegrationRequirementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDocumentConversionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApproversOperationCompleted;
        
        private System.Threading.SendOrPostCallback findRecycledDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSimpleDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback destroyDocumentApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSimpleDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSecurityOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRelatedDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentByExternalIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyDocumentToUploadAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReportSubjectIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateGroupSecurityTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDocumentWithApprovementLevelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback findMostPopularDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSimpleDocumentPrivateOperationCompleted;
        
        private System.Threading.SendOrPostCallback findMostPopularDocumentsOnDemandOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeSecurityOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDocumentWithApprovementLevelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActiveDocumentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DocumentServiceService() {
            this.Url = global::ecmfiles.Properties.Settings.Default.ecmfiles_WebReference_DocumentServiceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getDocumentApprovalHistoryCompletedEventHandler getDocumentApprovalHistoryCompleted;
        
        /// <remarks/>
        public event getDocumentApprovalStatusCompletedEventHandler getDocumentApprovalStatusCompleted;
        
        /// <remarks/>
        public event createDocumentCompletedEventHandler createDocumentCompleted;
        
        /// <remarks/>
        public event restoreDocumentCompletedEventHandler restoreDocumentCompleted;
        
        /// <remarks/>
        public event getDocumentContentCompletedEventHandler getDocumentContentCompleted;
        
        /// <remarks/>
        public event approveDocumentCompletedEventHandler approveDocumentCompleted;
        
        /// <remarks/>
        public event getDocumentVersionCompletedEventHandler getDocumentVersionCompleted;
        
        /// <remarks/>
        public event destroyDocumentCompletedEventHandler destroyDocumentCompleted;
        
        /// <remarks/>
        public event validateIntegrationRequirementsCompletedEventHandler validateIntegrationRequirementsCompleted;
        
        /// <remarks/>
        public event getUserPermissionsCompletedEventHandler getUserPermissionsCompleted;
        
        /// <remarks/>
        public event updateDocumentConversionStatusCompletedEventHandler updateDocumentConversionStatusCompleted;
        
        /// <remarks/>
        public event getApproversCompletedEventHandler getApproversCompleted;
        
        /// <remarks/>
        public event findRecycledDocumentsCompletedEventHandler findRecycledDocumentsCompleted;
        
        /// <remarks/>
        public event updateSimpleDocumentCompletedEventHandler updateSimpleDocumentCompleted;
        
        /// <remarks/>
        public event destroyDocumentApprovalCompletedEventHandler destroyDocumentApprovalCompleted;
        
        /// <remarks/>
        public event moveDocumentCompletedEventHandler moveDocumentCompleted;
        
        /// <remarks/>
        public event createSimpleDocumentCompletedEventHandler createSimpleDocumentCompleted;
        
        /// <remarks/>
        public event updateDocumentCompletedEventHandler updateDocumentCompleted;
        
        /// <remarks/>
        public event getSecurityCompletedEventHandler getSecurityCompleted;
        
        /// <remarks/>
        public event getRelatedDocumentsCompletedEventHandler getRelatedDocumentsCompleted;
        
        /// <remarks/>
        public event getDocumentByExternalIdCompletedEventHandler getDocumentByExternalIdCompleted;
        
        /// <remarks/>
        public event copyDocumentToUploadAreaCompletedEventHandler copyDocumentToUploadAreaCompleted;
        
        /// <remarks/>
        public event getReportSubjectIdCompletedEventHandler getReportSubjectIdCompleted;
        
        /// <remarks/>
        public event updateGroupSecurityTypeCompletedEventHandler updateGroupSecurityTypeCompleted;
        
        /// <remarks/>
        public event updateDocumentWithApprovementLevelsCompletedEventHandler updateDocumentWithApprovementLevelsCompleted;
        
        /// <remarks/>
        public event findMostPopularDocumentsCompletedEventHandler findMostPopularDocumentsCompleted;
        
        /// <remarks/>
        public event deleteDocumentCompletedEventHandler deleteDocumentCompleted;
        
        /// <remarks/>
        public event createSimpleDocumentPrivateCompletedEventHandler createSimpleDocumentPrivateCompleted;
        
        /// <remarks/>
        public event findMostPopularDocumentsOnDemandCompletedEventHandler findMostPopularDocumentsOnDemandCompleted;
        
        /// <remarks/>
        public event removeSecurityCompletedEventHandler removeSecurityCompleted;
        
        /// <remarks/>
        public event createDocumentWithApprovementLevelsCompletedEventHandler createDocumentWithApprovementLevelsCompleted;
        
        /// <remarks/>
        public event getActiveDocumentCompletedEventHandler getActiveDocumentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getDocumentApprovalHistory", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DocumentApprovementHistoryDtos")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentApprovementHistoryDto[] getDocumentApprovalHistory(string username, string password, int companyId, int documentId, int version) {
            object[] results = this.Invoke("getDocumentApprovalHistory", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version});
            return ((documentApprovementHistoryDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentApprovalHistoryAsync(string username, string password, int companyId, int documentId, int version) {
            this.getDocumentApprovalHistoryAsync(username, password, companyId, documentId, version, null);
        }
        
        /// <remarks/>
        public void getDocumentApprovalHistoryAsync(string username, string password, int companyId, int documentId, int version, object userState) {
            if ((this.getDocumentApprovalHistoryOperationCompleted == null)) {
                this.getDocumentApprovalHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentApprovalHistoryOperationCompleted);
            }
            this.InvokeAsync("getDocumentApprovalHistory", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version}, this.getDocumentApprovalHistoryOperationCompleted, userState);
        }
        
        private void OngetDocumentApprovalHistoryOperationCompleted(object arg) {
            if ((this.getDocumentApprovalHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentApprovalHistoryCompleted(this, new getDocumentApprovalHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getDocumentApprovalStatus", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DocumentApprovalStatusDtos")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentApprovalStatusDto[] getDocumentApprovalStatus(string username, string password, int companyId, int documentId, int version) {
            object[] results = this.Invoke("getDocumentApprovalStatus", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version});
            return ((documentApprovalStatusDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentApprovalStatusAsync(string username, string password, int companyId, int documentId, int version) {
            this.getDocumentApprovalStatusAsync(username, password, companyId, documentId, version, null);
        }
        
        /// <remarks/>
        public void getDocumentApprovalStatusAsync(string username, string password, int companyId, int documentId, int version, object userState) {
            if ((this.getDocumentApprovalStatusOperationCompleted == null)) {
                this.getDocumentApprovalStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentApprovalStatusOperationCompleted);
            }
            this.InvokeAsync("getDocumentApprovalStatus", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version}, this.getDocumentApprovalStatusOperationCompleted, userState);
        }
        
        private void OngetDocumentApprovalStatusOperationCompleted(object arg) {
            if ((this.getDocumentApprovalStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentApprovalStatusCompleted(this, new getDocumentApprovalStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("createDocument", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] createDocument(string username, string password, int companyId, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentDto[] Document, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] attachment[] Attachments, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentSecurityConfigDto[] security, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] approverDto[] Approvers, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] relatedDocumentDto[] RelatedDocuments) {
            object[] results = this.Invoke("createDocument", new object[] {
                        username,
                        password,
                        companyId,
                        Document,
                        Attachments,
                        security,
                        Approvers,
                        RelatedDocuments});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void createDocumentAsync(string username, string password, int companyId, documentDto[] Document, attachment[] Attachments, documentSecurityConfigDto[] security, approverDto[] Approvers, relatedDocumentDto[] RelatedDocuments) {
            this.createDocumentAsync(username, password, companyId, Document, Attachments, security, Approvers, RelatedDocuments, null);
        }
        
        /// <remarks/>
        public void createDocumentAsync(string username, string password, int companyId, documentDto[] Document, attachment[] Attachments, documentSecurityConfigDto[] security, approverDto[] Approvers, relatedDocumentDto[] RelatedDocuments, object userState) {
            if ((this.createDocumentOperationCompleted == null)) {
                this.createDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDocumentOperationCompleted);
            }
            this.InvokeAsync("createDocument", new object[] {
                        username,
                        password,
                        companyId,
                        Document,
                        Attachments,
                        security,
                        Approvers,
                        RelatedDocuments}, this.createDocumentOperationCompleted, userState);
        }
        
        private void OncreateDocumentOperationCompleted(object arg) {
            if ((this.createDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDocumentCompleted(this, new createDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("restoreDocument", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] restoreDocument(string user, string password, int companyId, int documentId, string colleagueId) {
            object[] results = this.Invoke("restoreDocument", new object[] {
                        user,
                        password,
                        companyId,
                        documentId,
                        colleagueId});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void restoreDocumentAsync(string user, string password, int companyId, int documentId, string colleagueId) {
            this.restoreDocumentAsync(user, password, companyId, documentId, colleagueId, null);
        }
        
        /// <remarks/>
        public void restoreDocumentAsync(string user, string password, int companyId, int documentId, string colleagueId, object userState) {
            if ((this.restoreDocumentOperationCompleted == null)) {
                this.restoreDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrestoreDocumentOperationCompleted);
            }
            this.InvokeAsync("restoreDocument", new object[] {
                        user,
                        password,
                        companyId,
                        documentId,
                        colleagueId}, this.restoreDocumentOperationCompleted, userState);
        }
        
        private void OnrestoreDocumentOperationCompleted(object arg) {
            if ((this.restoreDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.restoreDocumentCompleted(this, new restoreDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getDocumentContent", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("folder", DataType="base64Binary")]
        public byte[] getDocumentContent(string username, string password, int companyId, int documentId, string colleagueId, int documentoVersao, string nomeArquivo) {
            object[] results = this.Invoke("getDocumentContent", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        colleagueId,
                        documentoVersao,
                        nomeArquivo});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentContentAsync(string username, string password, int companyId, int documentId, string colleagueId, int documentoVersao, string nomeArquivo) {
            this.getDocumentContentAsync(username, password, companyId, documentId, colleagueId, documentoVersao, nomeArquivo, null);
        }
        
        /// <remarks/>
        public void getDocumentContentAsync(string username, string password, int companyId, int documentId, string colleagueId, int documentoVersao, string nomeArquivo, object userState) {
            if ((this.getDocumentContentOperationCompleted == null)) {
                this.getDocumentContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentContentOperationCompleted);
            }
            this.InvokeAsync("getDocumentContent", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        colleagueId,
                        documentoVersao,
                        nomeArquivo}, this.getDocumentContentOperationCompleted, userState);
        }
        
        private void OngetDocumentContentOperationCompleted(object arg) {
            if ((this.getDocumentContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentContentCompleted(this, new getDocumentContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("approveDocument", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] approveDocument(int companyId, string userId, string password, int documentId, int version, string approverId, bool approved, string observation) {
            object[] results = this.Invoke("approveDocument", new object[] {
                        companyId,
                        userId,
                        password,
                        documentId,
                        version,
                        approverId,
                        approved,
                        observation});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void approveDocumentAsync(int companyId, string userId, string password, int documentId, int version, string approverId, bool approved, string observation) {
            this.approveDocumentAsync(companyId, userId, password, documentId, version, approverId, approved, observation, null);
        }
        
        /// <remarks/>
        public void approveDocumentAsync(int companyId, string userId, string password, int documentId, int version, string approverId, bool approved, string observation, object userState) {
            if ((this.approveDocumentOperationCompleted == null)) {
                this.approveDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnapproveDocumentOperationCompleted);
            }
            this.InvokeAsync("approveDocument", new object[] {
                        companyId,
                        userId,
                        password,
                        documentId,
                        version,
                        approverId,
                        approved,
                        observation}, this.approveDocumentOperationCompleted, userState);
        }
        
        private void OnapproveDocumentOperationCompleted(object arg) {
            if ((this.approveDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.approveDocumentCompleted(this, new approveDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getDocumentVersion", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("folder")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentDto[] getDocumentVersion(string username, string password, int companyId, int documentId, int version, string colleagueId) {
            object[] results = this.Invoke("getDocumentVersion", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version,
                        colleagueId});
            return ((documentDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentVersionAsync(string username, string password, int companyId, int documentId, int version, string colleagueId) {
            this.getDocumentVersionAsync(username, password, companyId, documentId, version, colleagueId, null);
        }
        
        /// <remarks/>
        public void getDocumentVersionAsync(string username, string password, int companyId, int documentId, int version, string colleagueId, object userState) {
            if ((this.getDocumentVersionOperationCompleted == null)) {
                this.getDocumentVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentVersionOperationCompleted);
            }
            this.InvokeAsync("getDocumentVersion", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version,
                        colleagueId}, this.getDocumentVersionOperationCompleted, userState);
        }
        
        private void OngetDocumentVersionOperationCompleted(object arg) {
            if ((this.getDocumentVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentVersionCompleted(this, new getDocumentVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("destroyDocument", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] destroyDocument(string user, string password, int companyId, int documentId, string colleagueId) {
            object[] results = this.Invoke("destroyDocument", new object[] {
                        user,
                        password,
                        companyId,
                        documentId,
                        colleagueId});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void destroyDocumentAsync(string user, string password, int companyId, int documentId, string colleagueId) {
            this.destroyDocumentAsync(user, password, companyId, documentId, colleagueId, null);
        }
        
        /// <remarks/>
        public void destroyDocumentAsync(string user, string password, int companyId, int documentId, string colleagueId, object userState) {
            if ((this.destroyDocumentOperationCompleted == null)) {
                this.destroyDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndestroyDocumentOperationCompleted);
            }
            this.InvokeAsync("destroyDocument", new object[] {
                        user,
                        password,
                        companyId,
                        documentId,
                        colleagueId}, this.destroyDocumentOperationCompleted, userState);
        }
        
        private void OndestroyDocumentOperationCompleted(object arg) {
            if ((this.destroyDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.destroyDocumentCompleted(this, new destroyDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("validateIntegrationRequirements", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string validateIntegrationRequirements(string username, string password, int companyId) {
            object[] results = this.Invoke("validateIntegrationRequirements", new object[] {
                        username,
                        password,
                        companyId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void validateIntegrationRequirementsAsync(string username, string password, int companyId) {
            this.validateIntegrationRequirementsAsync(username, password, companyId, null);
        }
        
        /// <remarks/>
        public void validateIntegrationRequirementsAsync(string username, string password, int companyId, object userState) {
            if ((this.validateIntegrationRequirementsOperationCompleted == null)) {
                this.validateIntegrationRequirementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateIntegrationRequirementsOperationCompleted);
            }
            this.InvokeAsync("validateIntegrationRequirements", new object[] {
                        username,
                        password,
                        companyId}, this.validateIntegrationRequirementsOperationCompleted, userState);
        }
        
        private void OnvalidateIntegrationRequirementsOperationCompleted(object arg) {
            if ((this.validateIntegrationRequirementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateIntegrationRequirementsCompleted(this, new validateIntegrationRequirementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getUserPermissions", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public int getUserPermissions(int companyId, string username, int documentId, int version) {
            object[] results = this.Invoke("getUserPermissions", new object[] {
                        companyId,
                        username,
                        documentId,
                        version});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getUserPermissionsAsync(int companyId, string username, int documentId, int version) {
            this.getUserPermissionsAsync(companyId, username, documentId, version, null);
        }
        
        /// <remarks/>
        public void getUserPermissionsAsync(int companyId, string username, int documentId, int version, object userState) {
            if ((this.getUserPermissionsOperationCompleted == null)) {
                this.getUserPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserPermissionsOperationCompleted);
            }
            this.InvokeAsync("getUserPermissions", new object[] {
                        companyId,
                        username,
                        documentId,
                        version}, this.getUserPermissionsOperationCompleted, userState);
        }
        
        private void OngetUserPermissionsOperationCompleted(object arg) {
            if ((this.getUserPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserPermissionsCompleted(this, new getUserPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("updateDocumentConversionStatus", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] updateDocumentConversionStatus(string username, string password, int companyId, int documentId, int version, int status, string msg) {
            object[] results = this.Invoke("updateDocumentConversionStatus", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version,
                        status,
                        msg});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void updateDocumentConversionStatusAsync(string username, string password, int companyId, int documentId, int version, int status, string msg) {
            this.updateDocumentConversionStatusAsync(username, password, companyId, documentId, version, status, msg, null);
        }
        
        /// <remarks/>
        public void updateDocumentConversionStatusAsync(string username, string password, int companyId, int documentId, int version, int status, string msg, object userState) {
            if ((this.updateDocumentConversionStatusOperationCompleted == null)) {
                this.updateDocumentConversionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDocumentConversionStatusOperationCompleted);
            }
            this.InvokeAsync("updateDocumentConversionStatus", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version,
                        status,
                        msg}, this.updateDocumentConversionStatusOperationCompleted, userState);
        }
        
        private void OnupdateDocumentConversionStatusOperationCompleted(object arg) {
            if ((this.updateDocumentConversionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDocumentConversionStatusCompleted(this, new updateDocumentConversionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getApprovers", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Approvers")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public approverWithLevelDto[] getApprovers(string username, string password, int companyId, int documentId, int version) {
            object[] results = this.Invoke("getApprovers", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version});
            return ((approverWithLevelDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getApproversAsync(string username, string password, int companyId, int documentId, int version) {
            this.getApproversAsync(username, password, companyId, documentId, version, null);
        }
        
        /// <remarks/>
        public void getApproversAsync(string username, string password, int companyId, int documentId, int version, object userState) {
            if ((this.getApproversOperationCompleted == null)) {
                this.getApproversOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApproversOperationCompleted);
            }
            this.InvokeAsync("getApprovers", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version}, this.getApproversOperationCompleted, userState);
        }
        
        private void OngetApproversOperationCompleted(object arg) {
            if ((this.getApproversCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApproversCompleted(this, new getApproversCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("findRecycledDocuments", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentDto[] findRecycledDocuments(string user, string password, int companyId, string colleagueId) {
            object[] results = this.Invoke("findRecycledDocuments", new object[] {
                        user,
                        password,
                        companyId,
                        colleagueId});
            return ((documentDto[])(results[0]));
        }
        
        /// <remarks/>
        public void findRecycledDocumentsAsync(string user, string password, int companyId, string colleagueId) {
            this.findRecycledDocumentsAsync(user, password, companyId, colleagueId, null);
        }
        
        /// <remarks/>
        public void findRecycledDocumentsAsync(string user, string password, int companyId, string colleagueId, object userState) {
            if ((this.findRecycledDocumentsOperationCompleted == null)) {
                this.findRecycledDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindRecycledDocumentsOperationCompleted);
            }
            this.InvokeAsync("findRecycledDocuments", new object[] {
                        user,
                        password,
                        companyId,
                        colleagueId}, this.findRecycledDocumentsOperationCompleted, userState);
        }
        
        private void OnfindRecycledDocumentsOperationCompleted(object arg) {
            if ((this.findRecycledDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findRecycledDocumentsCompleted(this, new findRecycledDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("updateSimpleDocument", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] updateSimpleDocument(string username, string password, int companyId, int documentId, string publisherId, string documentDescription, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] attachment[] Attachments) {
            object[] results = this.Invoke("updateSimpleDocument", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        publisherId,
                        documentDescription,
                        Attachments});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void updateSimpleDocumentAsync(string username, string password, int companyId, int documentId, string publisherId, string documentDescription, attachment[] Attachments) {
            this.updateSimpleDocumentAsync(username, password, companyId, documentId, publisherId, documentDescription, Attachments, null);
        }
        
        /// <remarks/>
        public void updateSimpleDocumentAsync(string username, string password, int companyId, int documentId, string publisherId, string documentDescription, attachment[] Attachments, object userState) {
            if ((this.updateSimpleDocumentOperationCompleted == null)) {
                this.updateSimpleDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSimpleDocumentOperationCompleted);
            }
            this.InvokeAsync("updateSimpleDocument", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        publisherId,
                        documentDescription,
                        Attachments}, this.updateSimpleDocumentOperationCompleted, userState);
        }
        
        private void OnupdateSimpleDocumentOperationCompleted(object arg) {
            if ((this.updateSimpleDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSimpleDocumentCompleted(this, new updateSimpleDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("destroyDocumentApproval", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] destroyDocumentApproval(string userId, string password, int companyId, int documentId, string publisherId) {
            object[] results = this.Invoke("destroyDocumentApproval", new object[] {
                        userId,
                        password,
                        companyId,
                        documentId,
                        publisherId});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void destroyDocumentApprovalAsync(string userId, string password, int companyId, int documentId, string publisherId) {
            this.destroyDocumentApprovalAsync(userId, password, companyId, documentId, publisherId, null);
        }
        
        /// <remarks/>
        public void destroyDocumentApprovalAsync(string userId, string password, int companyId, int documentId, string publisherId, object userState) {
            if ((this.destroyDocumentApprovalOperationCompleted == null)) {
                this.destroyDocumentApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OndestroyDocumentApprovalOperationCompleted);
            }
            this.InvokeAsync("destroyDocumentApproval", new object[] {
                        userId,
                        password,
                        companyId,
                        documentId,
                        publisherId}, this.destroyDocumentApprovalOperationCompleted, userState);
        }
        
        private void OndestroyDocumentApprovalOperationCompleted(object arg) {
            if ((this.destroyDocumentApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.destroyDocumentApprovalCompleted(this, new destroyDocumentApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("moveDocument", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string moveDocument(string username, string password, int companyId, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.Nullable<int>[] documentIds, string colleagueId, int destFolderId) {
            object[] results = this.Invoke("moveDocument", new object[] {
                        username,
                        password,
                        companyId,
                        documentIds,
                        colleagueId,
                        destFolderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void moveDocumentAsync(string username, string password, int companyId, System.Nullable<int>[] documentIds, string colleagueId, int destFolderId) {
            this.moveDocumentAsync(username, password, companyId, documentIds, colleagueId, destFolderId, null);
        }
        
        /// <remarks/>
        public void moveDocumentAsync(string username, string password, int companyId, System.Nullable<int>[] documentIds, string colleagueId, int destFolderId, object userState) {
            if ((this.moveDocumentOperationCompleted == null)) {
                this.moveDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveDocumentOperationCompleted);
            }
            this.InvokeAsync("moveDocument", new object[] {
                        username,
                        password,
                        companyId,
                        documentIds,
                        colleagueId,
                        destFolderId}, this.moveDocumentOperationCompleted, userState);
        }
        
        private void OnmoveDocumentOperationCompleted(object arg) {
            if ((this.moveDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveDocumentCompleted(this, new moveDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("createSimpleDocument", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] createSimpleDocument(string username, string password, int companyId, int parentDocumentId, string publisherId, string documentDescription, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] attachment[] Attachments) {
            object[] results = this.Invoke("createSimpleDocument", new object[] {
                        username,
                        password,
                        companyId,
                        parentDocumentId,
                        publisherId,
                        documentDescription,
                        Attachments});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void createSimpleDocumentAsync(string username, string password, int companyId, int parentDocumentId, string publisherId, string documentDescription, attachment[] Attachments) {
            this.createSimpleDocumentAsync(username, password, companyId, parentDocumentId, publisherId, documentDescription, Attachments, null);
        }
        
        /// <remarks/>
        public void createSimpleDocumentAsync(string username, string password, int companyId, int parentDocumentId, string publisherId, string documentDescription, attachment[] Attachments, object userState) {
            if ((this.createSimpleDocumentOperationCompleted == null)) {
                this.createSimpleDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSimpleDocumentOperationCompleted);
            }
            this.InvokeAsync("createSimpleDocument", new object[] {
                        username,
                        password,
                        companyId,
                        parentDocumentId,
                        publisherId,
                        documentDescription,
                        Attachments}, this.createSimpleDocumentOperationCompleted, userState);
        }
        
        private void OncreateSimpleDocumentOperationCompleted(object arg) {
            if ((this.createSimpleDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSimpleDocumentCompleted(this, new createSimpleDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("updateDocument", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] updateDocument(string username, string password, int companyId, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentDto[] Document, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] attachment[] Attachments, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentSecurityConfigDto[] security, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] approverDto[] Approvers, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] relatedDocumentDto[] RelatedDocuments) {
            object[] results = this.Invoke("updateDocument", new object[] {
                        username,
                        password,
                        companyId,
                        Document,
                        Attachments,
                        security,
                        Approvers,
                        RelatedDocuments});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void updateDocumentAsync(string username, string password, int companyId, documentDto[] Document, attachment[] Attachments, documentSecurityConfigDto[] security, approverDto[] Approvers, relatedDocumentDto[] RelatedDocuments) {
            this.updateDocumentAsync(username, password, companyId, Document, Attachments, security, Approvers, RelatedDocuments, null);
        }
        
        /// <remarks/>
        public void updateDocumentAsync(string username, string password, int companyId, documentDto[] Document, attachment[] Attachments, documentSecurityConfigDto[] security, approverDto[] Approvers, relatedDocumentDto[] RelatedDocuments, object userState) {
            if ((this.updateDocumentOperationCompleted == null)) {
                this.updateDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDocumentOperationCompleted);
            }
            this.InvokeAsync("updateDocument", new object[] {
                        username,
                        password,
                        companyId,
                        Document,
                        Attachments,
                        security,
                        Approvers,
                        RelatedDocuments}, this.updateDocumentOperationCompleted, userState);
        }
        
        private void OnupdateDocumentOperationCompleted(object arg) {
            if ((this.updateDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDocumentCompleted(this, new updateDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getSecurity", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Security")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentSecurityConfigDto[] getSecurity(string username, string password, int companyId, int documentId, int version) {
            object[] results = this.Invoke("getSecurity", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version});
            return ((documentSecurityConfigDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getSecurityAsync(string username, string password, int companyId, int documentId, int version) {
            this.getSecurityAsync(username, password, companyId, documentId, version, null);
        }
        
        /// <remarks/>
        public void getSecurityAsync(string username, string password, int companyId, int documentId, int version, object userState) {
            if ((this.getSecurityOperationCompleted == null)) {
                this.getSecurityOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSecurityOperationCompleted);
            }
            this.InvokeAsync("getSecurity", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version}, this.getSecurityOperationCompleted, userState);
        }
        
        private void OngetSecurityOperationCompleted(object arg) {
            if ((this.getSecurityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSecurityCompleted(this, new getSecurityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getRelatedDocuments", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("RelatedDocuments")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public relatedDocumentDto[] getRelatedDocuments(string username, string password, int companyId, int documentId, int version) {
            object[] results = this.Invoke("getRelatedDocuments", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version});
            return ((relatedDocumentDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getRelatedDocumentsAsync(string username, string password, int companyId, int documentId, int version) {
            this.getRelatedDocumentsAsync(username, password, companyId, documentId, version, null);
        }
        
        /// <remarks/>
        public void getRelatedDocumentsAsync(string username, string password, int companyId, int documentId, int version, object userState) {
            if ((this.getRelatedDocumentsOperationCompleted == null)) {
                this.getRelatedDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRelatedDocumentsOperationCompleted);
            }
            this.InvokeAsync("getRelatedDocuments", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version}, this.getRelatedDocumentsOperationCompleted, userState);
        }
        
        private void OngetRelatedDocumentsOperationCompleted(object arg) {
            if ((this.getRelatedDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRelatedDocumentsCompleted(this, new getRelatedDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getDocumentByExternalId", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Documents")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentDto[] getDocumentByExternalId(string username, string password, int companyId, string externalDocumentnId, string colleagueId) {
            object[] results = this.Invoke("getDocumentByExternalId", new object[] {
                        username,
                        password,
                        companyId,
                        externalDocumentnId,
                        colleagueId});
            return ((documentDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentByExternalIdAsync(string username, string password, int companyId, string externalDocumentnId, string colleagueId) {
            this.getDocumentByExternalIdAsync(username, password, companyId, externalDocumentnId, colleagueId, null);
        }
        
        /// <remarks/>
        public void getDocumentByExternalIdAsync(string username, string password, int companyId, string externalDocumentnId, string colleagueId, object userState) {
            if ((this.getDocumentByExternalIdOperationCompleted == null)) {
                this.getDocumentByExternalIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentByExternalIdOperationCompleted);
            }
            this.InvokeAsync("getDocumentByExternalId", new object[] {
                        username,
                        password,
                        companyId,
                        externalDocumentnId,
                        colleagueId}, this.getDocumentByExternalIdOperationCompleted, userState);
        }
        
        private void OngetDocumentByExternalIdOperationCompleted(object arg) {
            if ((this.getDocumentByExternalIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentByExternalIdCompleted(this, new getDocumentByExternalIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("copyDocumentToUploadArea", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] copyDocumentToUploadArea(string user, string password, int companyId, int documentId, int version, string colleagueId) {
            object[] results = this.Invoke("copyDocumentToUploadArea", new object[] {
                        user,
                        password,
                        companyId,
                        documentId,
                        version,
                        colleagueId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void copyDocumentToUploadAreaAsync(string user, string password, int companyId, int documentId, int version, string colleagueId) {
            this.copyDocumentToUploadAreaAsync(user, password, companyId, documentId, version, colleagueId, null);
        }
        
        /// <remarks/>
        public void copyDocumentToUploadAreaAsync(string user, string password, int companyId, int documentId, int version, string colleagueId, object userState) {
            if ((this.copyDocumentToUploadAreaOperationCompleted == null)) {
                this.copyDocumentToUploadAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyDocumentToUploadAreaOperationCompleted);
            }
            this.InvokeAsync("copyDocumentToUploadArea", new object[] {
                        user,
                        password,
                        companyId,
                        documentId,
                        version,
                        colleagueId}, this.copyDocumentToUploadAreaOperationCompleted, userState);
        }
        
        private void OncopyDocumentToUploadAreaOperationCompleted(object arg) {
            if ((this.copyDocumentToUploadAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyDocumentToUploadAreaCompleted(this, new copyDocumentToUploadAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getReportSubject", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("topicId")]
        public int getReportSubjectId(string username, string password, int companyId) {
            object[] results = this.Invoke("getReportSubjectId", new object[] {
                        username,
                        password,
                        companyId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getReportSubjectIdAsync(string username, string password, int companyId) {
            this.getReportSubjectIdAsync(username, password, companyId, null);
        }
        
        /// <remarks/>
        public void getReportSubjectIdAsync(string username, string password, int companyId, object userState) {
            if ((this.getReportSubjectIdOperationCompleted == null)) {
                this.getReportSubjectIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReportSubjectIdOperationCompleted);
            }
            this.InvokeAsync("getReportSubjectId", new object[] {
                        username,
                        password,
                        companyId}, this.getReportSubjectIdOperationCompleted, userState);
        }
        
        private void OngetReportSubjectIdOperationCompleted(object arg) {
            if ((this.getReportSubjectIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReportSubjectIdCompleted(this, new getReportSubjectIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("updateGroupSecurityType", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] updateGroupSecurityType(string username, string password, int companyId, int documentId, int version, int permissionType, int restrictionType, string colleagueId) {
            object[] results = this.Invoke("updateGroupSecurityType", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version,
                        permissionType,
                        restrictionType,
                        colleagueId});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void updateGroupSecurityTypeAsync(string username, string password, int companyId, int documentId, int version, int permissionType, int restrictionType, string colleagueId) {
            this.updateGroupSecurityTypeAsync(username, password, companyId, documentId, version, permissionType, restrictionType, colleagueId, null);
        }
        
        /// <remarks/>
        public void updateGroupSecurityTypeAsync(string username, string password, int companyId, int documentId, int version, int permissionType, int restrictionType, string colleagueId, object userState) {
            if ((this.updateGroupSecurityTypeOperationCompleted == null)) {
                this.updateGroupSecurityTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateGroupSecurityTypeOperationCompleted);
            }
            this.InvokeAsync("updateGroupSecurityType", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version,
                        permissionType,
                        restrictionType,
                        colleagueId}, this.updateGroupSecurityTypeOperationCompleted, userState);
        }
        
        private void OnupdateGroupSecurityTypeOperationCompleted(object arg) {
            if ((this.updateGroupSecurityTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateGroupSecurityTypeCompleted(this, new updateGroupSecurityTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("updateDocumentWithApprovementLevels", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] updateDocumentWithApprovementLevels(string username, string password, int companyId, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentDto[] Document, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] attachment[] Attachments, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentSecurityConfigDto[] security, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] approverWithLevelDto[] ApproversWithLevels, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] approvalLevelDto[] Levels, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] relatedDocumentDto[] RelatedDocuments) {
            object[] results = this.Invoke("updateDocumentWithApprovementLevels", new object[] {
                        username,
                        password,
                        companyId,
                        Document,
                        Attachments,
                        security,
                        ApproversWithLevels,
                        Levels,
                        RelatedDocuments});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void updateDocumentWithApprovementLevelsAsync(string username, string password, int companyId, documentDto[] Document, attachment[] Attachments, documentSecurityConfigDto[] security, approverWithLevelDto[] ApproversWithLevels, approvalLevelDto[] Levels, relatedDocumentDto[] RelatedDocuments) {
            this.updateDocumentWithApprovementLevelsAsync(username, password, companyId, Document, Attachments, security, ApproversWithLevels, Levels, RelatedDocuments, null);
        }
        
        /// <remarks/>
        public void updateDocumentWithApprovementLevelsAsync(string username, string password, int companyId, documentDto[] Document, attachment[] Attachments, documentSecurityConfigDto[] security, approverWithLevelDto[] ApproversWithLevels, approvalLevelDto[] Levels, relatedDocumentDto[] RelatedDocuments, object userState) {
            if ((this.updateDocumentWithApprovementLevelsOperationCompleted == null)) {
                this.updateDocumentWithApprovementLevelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDocumentWithApprovementLevelsOperationCompleted);
            }
            this.InvokeAsync("updateDocumentWithApprovementLevels", new object[] {
                        username,
                        password,
                        companyId,
                        Document,
                        Attachments,
                        security,
                        ApproversWithLevels,
                        Levels,
                        RelatedDocuments}, this.updateDocumentWithApprovementLevelsOperationCompleted, userState);
        }
        
        private void OnupdateDocumentWithApprovementLevelsOperationCompleted(object arg) {
            if ((this.updateDocumentWithApprovementLevelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDocumentWithApprovementLevelsCompleted(this, new updateDocumentWithApprovementLevelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("findMostPopularDocuments", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentDto[] findMostPopularDocuments(string username, string password, int companyId, string colleagueId, int nrResultados) {
            object[] results = this.Invoke("findMostPopularDocuments", new object[] {
                        username,
                        password,
                        companyId,
                        colleagueId,
                        nrResultados});
            return ((documentDto[])(results[0]));
        }
        
        /// <remarks/>
        public void findMostPopularDocumentsAsync(string username, string password, int companyId, string colleagueId, int nrResultados) {
            this.findMostPopularDocumentsAsync(username, password, companyId, colleagueId, nrResultados, null);
        }
        
        /// <remarks/>
        public void findMostPopularDocumentsAsync(string username, string password, int companyId, string colleagueId, int nrResultados, object userState) {
            if ((this.findMostPopularDocumentsOperationCompleted == null)) {
                this.findMostPopularDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindMostPopularDocumentsOperationCompleted);
            }
            this.InvokeAsync("findMostPopularDocuments", new object[] {
                        username,
                        password,
                        companyId,
                        colleagueId,
                        nrResultados}, this.findMostPopularDocumentsOperationCompleted, userState);
        }
        
        private void OnfindMostPopularDocumentsOperationCompleted(object arg) {
            if ((this.findMostPopularDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findMostPopularDocumentsCompleted(this, new findMostPopularDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("deleteDocument", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] deleteDocument(string user, string password, int companyId, int documentId, string colleagueId) {
            object[] results = this.Invoke("deleteDocument", new object[] {
                        user,
                        password,
                        companyId,
                        documentId,
                        colleagueId});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void deleteDocumentAsync(string user, string password, int companyId, int documentId, string colleagueId) {
            this.deleteDocumentAsync(user, password, companyId, documentId, colleagueId, null);
        }
        
        /// <remarks/>
        public void deleteDocumentAsync(string user, string password, int companyId, int documentId, string colleagueId, object userState) {
            if ((this.deleteDocumentOperationCompleted == null)) {
                this.deleteDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDocumentOperationCompleted);
            }
            this.InvokeAsync("deleteDocument", new object[] {
                        user,
                        password,
                        companyId,
                        documentId,
                        colleagueId}, this.deleteDocumentOperationCompleted, userState);
        }
        
        private void OndeleteDocumentOperationCompleted(object arg) {
            if ((this.deleteDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDocumentCompleted(this, new deleteDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("createSimpleDocumentPrivate", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] createSimpleDocumentPrivate(string username, string password, int companyId, int parentDocumentId, string documentDescription, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] attachment[] Attachments) {
            object[] results = this.Invoke("createSimpleDocumentPrivate", new object[] {
                        username,
                        password,
                        companyId,
                        parentDocumentId,
                        documentDescription,
                        Attachments});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void createSimpleDocumentPrivateAsync(string username, string password, int companyId, int parentDocumentId, string documentDescription, attachment[] Attachments) {
            this.createSimpleDocumentPrivateAsync(username, password, companyId, parentDocumentId, documentDescription, Attachments, null);
        }
        
        /// <remarks/>
        public void createSimpleDocumentPrivateAsync(string username, string password, int companyId, int parentDocumentId, string documentDescription, attachment[] Attachments, object userState) {
            if ((this.createSimpleDocumentPrivateOperationCompleted == null)) {
                this.createSimpleDocumentPrivateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSimpleDocumentPrivateOperationCompleted);
            }
            this.InvokeAsync("createSimpleDocumentPrivate", new object[] {
                        username,
                        password,
                        companyId,
                        parentDocumentId,
                        documentDescription,
                        Attachments}, this.createSimpleDocumentPrivateOperationCompleted, userState);
        }
        
        private void OncreateSimpleDocumentPrivateOperationCompleted(object arg) {
            if ((this.createSimpleDocumentPrivateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSimpleDocumentPrivateCompleted(this, new createSimpleDocumentPrivateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("findMostPopularDocumentsOnDemand", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentDto[] findMostPopularDocumentsOnDemand(int companyId, string user, string password, string colleagueId, int limit, int lastRowId) {
            object[] results = this.Invoke("findMostPopularDocumentsOnDemand", new object[] {
                        companyId,
                        user,
                        password,
                        colleagueId,
                        limit,
                        lastRowId});
            return ((documentDto[])(results[0]));
        }
        
        /// <remarks/>
        public void findMostPopularDocumentsOnDemandAsync(int companyId, string user, string password, string colleagueId, int limit, int lastRowId) {
            this.findMostPopularDocumentsOnDemandAsync(companyId, user, password, colleagueId, limit, lastRowId, null);
        }
        
        /// <remarks/>
        public void findMostPopularDocumentsOnDemandAsync(int companyId, string user, string password, string colleagueId, int limit, int lastRowId, object userState) {
            if ((this.findMostPopularDocumentsOnDemandOperationCompleted == null)) {
                this.findMostPopularDocumentsOnDemandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindMostPopularDocumentsOnDemandOperationCompleted);
            }
            this.InvokeAsync("findMostPopularDocumentsOnDemand", new object[] {
                        companyId,
                        user,
                        password,
                        colleagueId,
                        limit,
                        lastRowId}, this.findMostPopularDocumentsOnDemandOperationCompleted, userState);
        }
        
        private void OnfindMostPopularDocumentsOnDemandOperationCompleted(object arg) {
            if ((this.findMostPopularDocumentsOnDemandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findMostPopularDocumentsOnDemandCompleted(this, new findMostPopularDocumentsOnDemandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("removeSecurity", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void removeSecurity(string username, string password, int companyId, int documentId, int version) {
            this.Invoke("removeSecurity", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version});
        }
        
        /// <remarks/>
        public void removeSecurityAsync(string username, string password, int companyId, int documentId, int version) {
            this.removeSecurityAsync(username, password, companyId, documentId, version, null);
        }
        
        /// <remarks/>
        public void removeSecurityAsync(string username, string password, int companyId, int documentId, int version, object userState) {
            if ((this.removeSecurityOperationCompleted == null)) {
                this.removeSecurityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveSecurityOperationCompleted);
            }
            this.InvokeAsync("removeSecurity", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        version}, this.removeSecurityOperationCompleted, userState);
        }
        
        private void OnremoveSecurityOperationCompleted(object arg) {
            if ((this.removeSecurityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeSecurityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("createDocumentWithApprovementLevels", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] createDocumentWithApprovementLevels(string username, string password, int companyId, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentDto[] Document, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] attachment[] Attachments, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentSecurityConfigDto[] security, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] approverWithLevelDto[] ApproversWithLevels, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] approvalLevelDto[] Levels, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] relatedDocumentDto[] RelatedDocuments) {
            object[] results = this.Invoke("createDocumentWithApprovementLevels", new object[] {
                        username,
                        password,
                        companyId,
                        Document,
                        Attachments,
                        security,
                        ApproversWithLevels,
                        Levels,
                        RelatedDocuments});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void createDocumentWithApprovementLevelsAsync(string username, string password, int companyId, documentDto[] Document, attachment[] Attachments, documentSecurityConfigDto[] security, approverWithLevelDto[] ApproversWithLevels, approvalLevelDto[] Levels, relatedDocumentDto[] RelatedDocuments) {
            this.createDocumentWithApprovementLevelsAsync(username, password, companyId, Document, Attachments, security, ApproversWithLevels, Levels, RelatedDocuments, null);
        }
        
        /// <remarks/>
        public void createDocumentWithApprovementLevelsAsync(string username, string password, int companyId, documentDto[] Document, attachment[] Attachments, documentSecurityConfigDto[] security, approverWithLevelDto[] ApproversWithLevels, approvalLevelDto[] Levels, relatedDocumentDto[] RelatedDocuments, object userState) {
            if ((this.createDocumentWithApprovementLevelsOperationCompleted == null)) {
                this.createDocumentWithApprovementLevelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDocumentWithApprovementLevelsOperationCompleted);
            }
            this.InvokeAsync("createDocumentWithApprovementLevels", new object[] {
                        username,
                        password,
                        companyId,
                        Document,
                        Attachments,
                        security,
                        ApproversWithLevels,
                        Levels,
                        RelatedDocuments}, this.createDocumentWithApprovementLevelsOperationCompleted, userState);
        }
        
        private void OncreateDocumentWithApprovementLevelsOperationCompleted(object arg) {
            if ((this.createDocumentWithApprovementLevelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDocumentWithApprovementLevelsCompleted(this, new createDocumentWithApprovementLevelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getActiveDocument", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("folder")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentDto[] getActiveDocument(string username, string password, int companyId, int documentId, string colleagueId) {
            object[] results = this.Invoke("getActiveDocument", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        colleagueId});
            return ((documentDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getActiveDocumentAsync(string username, string password, int companyId, int documentId, string colleagueId) {
            this.getActiveDocumentAsync(username, password, companyId, documentId, colleagueId, null);
        }
        
        /// <remarks/>
        public void getActiveDocumentAsync(string username, string password, int companyId, int documentId, string colleagueId, object userState) {
            if ((this.getActiveDocumentOperationCompleted == null)) {
                this.getActiveDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActiveDocumentOperationCompleted);
            }
            this.InvokeAsync("getActiveDocument", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        colleagueId}, this.getActiveDocumentOperationCompleted, userState);
        }
        
        private void OngetActiveDocumentOperationCompleted(object arg) {
            if ((this.getActiveDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActiveDocumentCompleted(this, new getActiveDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class documentApprovementHistoryDto {
        
        private System.DateTime approvementDateField;
        
        private bool approvementDateFieldSpecified;
        
        private string colleagueIdField;
        
        private int documentVersionField;
        
        private int iterationSequenceField;
        
        private int levelIdField;
        
        private int movementSequenceField;
        
        private string observationField;
        
        private bool signedField;
        
        private int statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime approvementDate {
            get {
                return this.approvementDateField;
            }
            set {
                this.approvementDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool approvementDateSpecified {
            get {
                return this.approvementDateFieldSpecified;
            }
            set {
                this.approvementDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string colleagueId {
            get {
                return this.colleagueIdField;
            }
            set {
                this.colleagueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentVersion {
            get {
                return this.documentVersionField;
            }
            set {
                this.documentVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int iterationSequence {
            get {
                return this.iterationSequenceField;
            }
            set {
                this.iterationSequenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int levelId {
            get {
                return this.levelIdField;
            }
            set {
                this.levelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int movementSequence {
            get {
                return this.movementSequenceField;
            }
            set {
                this.movementSequenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string observation {
            get {
                return this.observationField;
            }
            set {
                this.observationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool signed {
            get {
                return this.signedField;
            }
            set {
                this.signedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class approvalLevelDto {
        
        private int approvalModeField;
        
        private string levelDescriptionField;
        
        private int levelIdField;
        
        private bool mandatorySignatureField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int approvalMode {
            get {
                return this.approvalModeField;
            }
            set {
                this.approvalModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string levelDescription {
            get {
                return this.levelDescriptionField;
            }
            set {
                this.levelDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int levelId {
            get {
                return this.levelIdField;
            }
            set {
                this.levelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mandatorySignature {
            get {
                return this.mandatorySignatureField;
            }
            set {
                this.mandatorySignatureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class approverWithLevelDto {
        
        private int approverTypeField;
        
        private string colleagueIdField;
        
        private long companyIdField;
        
        private int documentIdField;
        
        private string[] fooField;
        
        private int levelIdField;
        
        private int versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int approverType {
            get {
                return this.approverTypeField;
            }
            set {
                this.approverTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string colleagueId {
            get {
                return this.colleagueIdField;
            }
            set {
                this.colleagueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("foo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] foo {
            get {
                return this.fooField;
            }
            set {
                this.fooField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int levelId {
            get {
                return this.levelIdField;
            }
            set {
                this.levelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class webServiceMessage {
        
        private long companyIdField;
        
        private string documentDescriptionField;
        
        private int documentIdField;
        
        private string[] fooField;
        
        private int versionField;
        
        private string webServiceMessage1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentDescription {
            get {
                return this.documentDescriptionField;
            }
            set {
                this.documentDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("foo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] foo {
            get {
                return this.fooField;
            }
            set {
                this.fooField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("webServiceMessage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string webServiceMessage1 {
            get {
                return this.webServiceMessage1Field;
            }
            set {
                this.webServiceMessage1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class relatedDocumentDto {
        
        private long companyIdField;
        
        private int documentIdField;
        
        private string[] fooField;
        
        private int relatedDocumentIdField;
        
        private int versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("foo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] foo {
            get {
                return this.fooField;
            }
            set {
                this.fooField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int relatedDocumentId {
            get {
                return this.relatedDocumentIdField;
            }
            set {
                this.relatedDocumentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class approverDto {
        
        private int approverTypeField;
        
        private string colleagueIdField;
        
        private long companyIdField;
        
        private int documentIdField;
        
        private string[] fooField;
        
        private int levelIdField;
        
        private int versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int approverType {
            get {
                return this.approverTypeField;
            }
            set {
                this.approverTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string colleagueId {
            get {
                return this.colleagueIdField;
            }
            set {
                this.colleagueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("foo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] foo {
            get {
                return this.fooField;
            }
            set {
                this.fooField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int levelId {
            get {
                return this.levelIdField;
            }
            set {
                this.levelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class documentSecurityConfigDto {
        
        private int attributionTypeField;
        
        private bool attributionTypeFieldSpecified;
        
        private string attributionValueField;
        
        private long companyIdField;
        
        private int documentIdField;
        
        private bool downloadEnabledField;
        
        private bool downloadEnabledFieldSpecified;
        
        private string[] fooField;
        
        private bool permissionField;
        
        private bool permissionFieldSpecified;
        
        private int securityLevelField;
        
        private bool securityLevelFieldSpecified;
        
        private bool securityVersionField;
        
        private bool securityVersionFieldSpecified;
        
        private int sequenceField;
        
        private bool showContentField;
        
        private bool showContentFieldSpecified;
        
        private int versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int attributionType {
            get {
                return this.attributionTypeField;
            }
            set {
                this.attributionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool attributionTypeSpecified {
            get {
                return this.attributionTypeFieldSpecified;
            }
            set {
                this.attributionTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string attributionValue {
            get {
                return this.attributionValueField;
            }
            set {
                this.attributionValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool downloadEnabled {
            get {
                return this.downloadEnabledField;
            }
            set {
                this.downloadEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool downloadEnabledSpecified {
            get {
                return this.downloadEnabledFieldSpecified;
            }
            set {
                this.downloadEnabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("foo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] foo {
            get {
                return this.fooField;
            }
            set {
                this.fooField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permission {
            get {
                return this.permissionField;
            }
            set {
                this.permissionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionSpecified {
            get {
                return this.permissionFieldSpecified;
            }
            set {
                this.permissionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int securityLevel {
            get {
                return this.securityLevelField;
            }
            set {
                this.securityLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool securityLevelSpecified {
            get {
                return this.securityLevelFieldSpecified;
            }
            set {
                this.securityLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool securityVersion {
            get {
                return this.securityVersionField;
            }
            set {
                this.securityVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool securityVersionSpecified {
            get {
                return this.securityVersionFieldSpecified;
            }
            set {
                this.securityVersionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool showContent {
            get {
                return this.showContentField;
            }
            set {
                this.showContentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool showContentSpecified {
            get {
                return this.showContentFieldSpecified;
            }
            set {
                this.showContentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class attachment {
        
        private bool attachField;
        
        private bool attachFieldSpecified;
        
        private bool descriptorField;
        
        private bool descriptorFieldSpecified;
        
        private bool editingField;
        
        private bool editingFieldSpecified;
        
        private string fileNameField;
        
        private attachment fileSelectedField;
        
        private long fileSizeField;
        
        private byte[] filecontentField;
        
        private string fullPatchField;
        
        private string iconPathField;
        
        private bool mobileField;
        
        private bool mobileFieldSpecified;
        
        private string pathNameField;
        
        private bool principalField;
        
        private bool principalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool attach {
            get {
                return this.attachField;
            }
            set {
                this.attachField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool attachSpecified {
            get {
                return this.attachFieldSpecified;
            }
            set {
                this.attachFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool descriptor {
            get {
                return this.descriptorField;
            }
            set {
                this.descriptorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool descriptorSpecified {
            get {
                return this.descriptorFieldSpecified;
            }
            set {
                this.descriptorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool editing {
            get {
                return this.editingField;
            }
            set {
                this.editingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool editingSpecified {
            get {
                return this.editingFieldSpecified;
            }
            set {
                this.editingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public attachment fileSelected {
            get {
                return this.fileSelectedField;
            }
            set {
                this.fileSelectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long fileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] filecontent {
            get {
                return this.filecontentField;
            }
            set {
                this.filecontentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fullPatch {
            get {
                return this.fullPatchField;
            }
            set {
                this.fullPatchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string iconPath {
            get {
                return this.iconPathField;
            }
            set {
                this.iconPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mobileSpecified {
            get {
                return this.mobileFieldSpecified;
            }
            set {
                this.mobileFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pathName {
            get {
                return this.pathNameField;
            }
            set {
                this.pathNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool principal {
            get {
                return this.principalField;
            }
            set {
                this.principalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool principalSpecified {
            get {
                return this.principalFieldSpecified;
            }
            set {
                this.principalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class sociableDocumentDto {
        
        private bool commentedField;
        
        private bool denouncedField;
        
        private int documentIdField;
        
        private bool documentIdFieldSpecified;
        
        private bool followingField;
        
        private bool likedField;
        
        private int numberCommentsField;
        
        private bool numberCommentsFieldSpecified;
        
        private int numberDenouncementsField;
        
        private bool numberDenouncementsFieldSpecified;
        
        private int numberFollowsField;
        
        private bool numberFollowsFieldSpecified;
        
        private int numberLikesField;
        
        private bool numberLikesFieldSpecified;
        
        private int numberSharesField;
        
        private bool numberSharesFieldSpecified;
        
        private bool sharedField;
        
        private long sociableIdField;
        
        private bool sociableIdFieldSpecified;
        
        private int versionField;
        
        private bool versionFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool commented {
            get {
                return this.commentedField;
            }
            set {
                this.commentedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool denounced {
            get {
                return this.denouncedField;
            }
            set {
                this.denouncedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentIdSpecified {
            get {
                return this.documentIdFieldSpecified;
            }
            set {
                this.documentIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool following {
            get {
                return this.followingField;
            }
            set {
                this.followingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool liked {
            get {
                return this.likedField;
            }
            set {
                this.likedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberComments {
            get {
                return this.numberCommentsField;
            }
            set {
                this.numberCommentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberCommentsSpecified {
            get {
                return this.numberCommentsFieldSpecified;
            }
            set {
                this.numberCommentsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberDenouncements {
            get {
                return this.numberDenouncementsField;
            }
            set {
                this.numberDenouncementsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberDenouncementsSpecified {
            get {
                return this.numberDenouncementsFieldSpecified;
            }
            set {
                this.numberDenouncementsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberFollows {
            get {
                return this.numberFollowsField;
            }
            set {
                this.numberFollowsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberFollowsSpecified {
            get {
                return this.numberFollowsFieldSpecified;
            }
            set {
                this.numberFollowsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberLikes {
            get {
                return this.numberLikesField;
            }
            set {
                this.numberLikesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberLikesSpecified {
            get {
                return this.numberLikesFieldSpecified;
            }
            set {
                this.numberLikesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberShares {
            get {
                return this.numberSharesField;
            }
            set {
                this.numberSharesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberSharesSpecified {
            get {
                return this.numberSharesFieldSpecified;
            }
            set {
                this.numberSharesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool shared {
            get {
                return this.sharedField;
            }
            set {
                this.sharedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long sociableId {
            get {
                return this.sociableIdField;
            }
            set {
                this.sociableIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sociableIdSpecified {
            get {
                return this.sociableIdFieldSpecified;
            }
            set {
                this.sociableIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool versionSpecified {
            get {
                return this.versionFieldSpecified;
            }
            set {
                this.versionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class documentDto {
        
        private int accessCountField;
        
        private bool accessCountFieldSpecified;
        
        private bool activeUserApproverField;
        
        private bool activeUserApproverFieldSpecified;
        
        private bool activeVersionField;
        
        private bool activeVersionFieldSpecified;
        
        private string additionalCommentsField;
        
        private bool allowMuiltiCardsPerUserField;
        
        private bool allowMuiltiCardsPerUserFieldSpecified;
        
        private bool approvalAndOrField;
        
        private bool approvalAndOrFieldSpecified;
        
        private bool approvedField;
        
        private bool approvedFieldSpecified;
        
        private System.DateTime approvedDateField;
        
        private bool approvedDateFieldSpecified;
        
        private string articleContentField;
        
        private int atualizationIdField;
        
        private bool atualizationIdFieldSpecified;
        
        private string backgroundColorField;
        
        private string backgroundImageField;
        
        private string bannerImageField;
        
        private string cardDescriptionField;
        
        private string colleagueIdField;
        
        private string colleagueNameField;
        
        private long companyIdField;
        
        private long crcField;
        
        private bool crcFieldSpecified;
        
        private System.DateTime createDateField;
        
        private bool createDateFieldSpecified;
        
        private string datasetNameField;
        
        private bool dateFormStartedField;
        
        private bool dateFormStartedFieldSpecified;
        
        private bool deletedField;
        
        private bool deletedFieldSpecified;
        
        private string documentDescriptionField;
        
        private int documentIdField;
        
        private bool documentIdFieldSpecified;
        
        private string documentKeyWordField;
        
        private int documentPropertyNumberField;
        
        private bool documentPropertyNumberFieldSpecified;
        
        private int documentPropertyVersionField;
        
        private bool documentPropertyVersionFieldSpecified;
        
        private string documentTypeField;
        
        private string documentTypeIdField;
        
        private bool downloadEnabledField;
        
        private bool downloadEnabledFieldSpecified;
        
        private bool draftField;
        
        private bool draftFieldSpecified;
        
        private System.DateTime expirationDateField;
        
        private bool expirationDateFieldSpecified;
        
        private bool expiredFormField;
        
        private bool expiredFormFieldSpecified;
        
        private bool expiresField;
        
        private bool expiresFieldSpecified;
        
        private string externalDocumentIdField;
        
        private bool favoriteField;
        
        private bool favoriteFieldSpecified;
        
        private int folderIdField;
        
        private bool folderIdFieldSpecified;
        
        private bool forAprovalField;
        
        private int iconIdField;
        
        private bool iconIdFieldSpecified;
        
        private string iconPathField;
        
        private bool imutableField;
        
        private bool imutableFieldSpecified;
        
        private bool indexedField;
        
        private bool indexedFieldSpecified;
        
        private bool inheritSecurityField;
        
        private bool internalVisualizerField;
        
        private bool internalVisualizerFieldSpecified;
        
        private bool isEncryptedField;
        
        private bool isEncryptedFieldSpecified;
        
        private string keyWordField;
        
        private string languageIdField;
        
        private string languageIndicatorField;
        
        private System.DateTime lastModifiedDateField;
        
        private bool lastModifiedDateFieldSpecified;
        
        private string lastModifiedTimeField;
        
        private int metaListIdField;
        
        private bool metaListIdFieldSpecified;
        
        private int metaListRecordIdField;
        
        private bool metaListRecordIdFieldSpecified;
        
        private bool newStructureField;
        
        private bool newStructureFieldSpecified;
        
        private bool onCheckoutField;
        
        private int parentDocumentIdField;
        
        private bool parentDocumentIdFieldSpecified;
        
        private int permissionTypeField;
        
        private bool permissionTypeFieldSpecified;
        
        private string phisicalFileField;
        
        private float phisicalFileSizeField;
        
        private bool phisicalFileSizeFieldSpecified;
        
        private int priorityField;
        
        private bool priorityFieldSpecified;
        
        private string privateColleagueIdField;
        
        private bool privateDocumentField;
        
        private bool privateDocumentFieldSpecified;
        
        private bool protectedCopyField;
        
        private bool protectedCopyFieldSpecified;
        
        private string publisherIdField;
        
        private string publisherNameField;
        
        private string relatedFilesField;
        
        private int restrictionTypeField;
        
        private bool restrictionTypeFieldSpecified;
        
        private int rowIdField;
        
        private int searchNumberField;
        
        private bool searchNumberFieldSpecified;
        
        private int securityLevelField;
        
        private string siteCodeField;
        
        private sociableDocumentDto sociableDocumentDtoField;
        
        private bool toolField;
        
        private bool toolFieldSpecified;
        
        private int topicIdField;
        
        private bool topicIdFieldSpecified;
        
        private bool translatedField;
        
        private string uUIDField;
        
        private bool updateIsoPropertiesField;
        
        private bool userAnswerFormField;
        
        private bool userAnswerFormFieldSpecified;
        
        private bool userNotifyField;
        
        private bool userNotifyFieldSpecified;
        
        private int userPermissionField;
        
        private bool userPermissionFieldSpecified;
        
        private System.DateTime validationStartDateField;
        
        private bool validationStartDateFieldSpecified;
        
        private int versionField;
        
        private string versionDescriptionField;
        
        private string versionOptionField;
        
        private string visualizationField;
        
        private string volumeIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int accessCount {
            get {
                return this.accessCountField;
            }
            set {
                this.accessCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool accessCountSpecified {
            get {
                return this.accessCountFieldSpecified;
            }
            set {
                this.accessCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool activeUserApprover {
            get {
                return this.activeUserApproverField;
            }
            set {
                this.activeUserApproverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activeUserApproverSpecified {
            get {
                return this.activeUserApproverFieldSpecified;
            }
            set {
                this.activeUserApproverFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool activeVersion {
            get {
                return this.activeVersionField;
            }
            set {
                this.activeVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activeVersionSpecified {
            get {
                return this.activeVersionFieldSpecified;
            }
            set {
                this.activeVersionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string additionalComments {
            get {
                return this.additionalCommentsField;
            }
            set {
                this.additionalCommentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowMuiltiCardsPerUser {
            get {
                return this.allowMuiltiCardsPerUserField;
            }
            set {
                this.allowMuiltiCardsPerUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowMuiltiCardsPerUserSpecified {
            get {
                return this.allowMuiltiCardsPerUserFieldSpecified;
            }
            set {
                this.allowMuiltiCardsPerUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool approvalAndOr {
            get {
                return this.approvalAndOrField;
            }
            set {
                this.approvalAndOrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool approvalAndOrSpecified {
            get {
                return this.approvalAndOrFieldSpecified;
            }
            set {
                this.approvalAndOrFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool approvedSpecified {
            get {
                return this.approvedFieldSpecified;
            }
            set {
                this.approvedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime approvedDate {
            get {
                return this.approvedDateField;
            }
            set {
                this.approvedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool approvedDateSpecified {
            get {
                return this.approvedDateFieldSpecified;
            }
            set {
                this.approvedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string articleContent {
            get {
                return this.articleContentField;
            }
            set {
                this.articleContentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int atualizationId {
            get {
                return this.atualizationIdField;
            }
            set {
                this.atualizationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool atualizationIdSpecified {
            get {
                return this.atualizationIdFieldSpecified;
            }
            set {
                this.atualizationIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string backgroundColor {
            get {
                return this.backgroundColorField;
            }
            set {
                this.backgroundColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string backgroundImage {
            get {
                return this.backgroundImageField;
            }
            set {
                this.backgroundImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bannerImage {
            get {
                return this.bannerImageField;
            }
            set {
                this.bannerImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cardDescription {
            get {
                return this.cardDescriptionField;
            }
            set {
                this.cardDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string colleagueId {
            get {
                return this.colleagueIdField;
            }
            set {
                this.colleagueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string colleagueName {
            get {
                return this.colleagueNameField;
            }
            set {
                this.colleagueNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long crc {
            get {
                return this.crcField;
            }
            set {
                this.crcField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool crcSpecified {
            get {
                return this.crcFieldSpecified;
            }
            set {
                this.crcFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime createDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createDateSpecified {
            get {
                return this.createDateFieldSpecified;
            }
            set {
                this.createDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string datasetName {
            get {
                return this.datasetNameField;
            }
            set {
                this.datasetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dateFormStarted {
            get {
                return this.dateFormStartedField;
            }
            set {
                this.dateFormStartedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateFormStartedSpecified {
            get {
                return this.dateFormStartedFieldSpecified;
            }
            set {
                this.dateFormStartedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deletedSpecified {
            get {
                return this.deletedFieldSpecified;
            }
            set {
                this.deletedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentDescription {
            get {
                return this.documentDescriptionField;
            }
            set {
                this.documentDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentIdSpecified {
            get {
                return this.documentIdFieldSpecified;
            }
            set {
                this.documentIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentKeyWord {
            get {
                return this.documentKeyWordField;
            }
            set {
                this.documentKeyWordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentPropertyNumber {
            get {
                return this.documentPropertyNumberField;
            }
            set {
                this.documentPropertyNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentPropertyNumberSpecified {
            get {
                return this.documentPropertyNumberFieldSpecified;
            }
            set {
                this.documentPropertyNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentPropertyVersion {
            get {
                return this.documentPropertyVersionField;
            }
            set {
                this.documentPropertyVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentPropertyVersionSpecified {
            get {
                return this.documentPropertyVersionFieldSpecified;
            }
            set {
                this.documentPropertyVersionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentType {
            get {
                return this.documentTypeField;
            }
            set {
                this.documentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentTypeId {
            get {
                return this.documentTypeIdField;
            }
            set {
                this.documentTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool downloadEnabled {
            get {
                return this.downloadEnabledField;
            }
            set {
                this.downloadEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool downloadEnabledSpecified {
            get {
                return this.downloadEnabledFieldSpecified;
            }
            set {
                this.downloadEnabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool draft {
            get {
                return this.draftField;
            }
            set {
                this.draftField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool draftSpecified {
            get {
                return this.draftFieldSpecified;
            }
            set {
                this.draftFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expirationDateSpecified {
            get {
                return this.expirationDateFieldSpecified;
            }
            set {
                this.expirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool expiredForm {
            get {
                return this.expiredFormField;
            }
            set {
                this.expiredFormField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expiredFormSpecified {
            get {
                return this.expiredFormFieldSpecified;
            }
            set {
                this.expiredFormFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool expires {
            get {
                return this.expiresField;
            }
            set {
                this.expiresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expiresSpecified {
            get {
                return this.expiresFieldSpecified;
            }
            set {
                this.expiresFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string externalDocumentId {
            get {
                return this.externalDocumentIdField;
            }
            set {
                this.externalDocumentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool favorite {
            get {
                return this.favoriteField;
            }
            set {
                this.favoriteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool favoriteSpecified {
            get {
                return this.favoriteFieldSpecified;
            }
            set {
                this.favoriteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int folderId {
            get {
                return this.folderIdField;
            }
            set {
                this.folderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool folderIdSpecified {
            get {
                return this.folderIdFieldSpecified;
            }
            set {
                this.folderIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool forAproval {
            get {
                return this.forAprovalField;
            }
            set {
                this.forAprovalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int iconId {
            get {
                return this.iconIdField;
            }
            set {
                this.iconIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool iconIdSpecified {
            get {
                return this.iconIdFieldSpecified;
            }
            set {
                this.iconIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string iconPath {
            get {
                return this.iconPathField;
            }
            set {
                this.iconPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool imutable {
            get {
                return this.imutableField;
            }
            set {
                this.imutableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool imutableSpecified {
            get {
                return this.imutableFieldSpecified;
            }
            set {
                this.imutableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool indexed {
            get {
                return this.indexedField;
            }
            set {
                this.indexedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool indexedSpecified {
            get {
                return this.indexedFieldSpecified;
            }
            set {
                this.indexedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool inheritSecurity {
            get {
                return this.inheritSecurityField;
            }
            set {
                this.inheritSecurityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool internalVisualizer {
            get {
                return this.internalVisualizerField;
            }
            set {
                this.internalVisualizerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool internalVisualizerSpecified {
            get {
                return this.internalVisualizerFieldSpecified;
            }
            set {
                this.internalVisualizerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isEncrypted {
            get {
                return this.isEncryptedField;
            }
            set {
                this.isEncryptedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isEncryptedSpecified {
            get {
                return this.isEncryptedFieldSpecified;
            }
            set {
                this.isEncryptedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string keyWord {
            get {
                return this.keyWordField;
            }
            set {
                this.keyWordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string languageId {
            get {
                return this.languageIdField;
            }
            set {
                this.languageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string languageIndicator {
            get {
                return this.languageIndicatorField;
            }
            set {
                this.languageIndicatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime lastModifiedDate {
            get {
                return this.lastModifiedDateField;
            }
            set {
                this.lastModifiedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastModifiedDateSpecified {
            get {
                return this.lastModifiedDateFieldSpecified;
            }
            set {
                this.lastModifiedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastModifiedTime {
            get {
                return this.lastModifiedTimeField;
            }
            set {
                this.lastModifiedTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int metaListId {
            get {
                return this.metaListIdField;
            }
            set {
                this.metaListIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool metaListIdSpecified {
            get {
                return this.metaListIdFieldSpecified;
            }
            set {
                this.metaListIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int metaListRecordId {
            get {
                return this.metaListRecordIdField;
            }
            set {
                this.metaListRecordIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool metaListRecordIdSpecified {
            get {
                return this.metaListRecordIdFieldSpecified;
            }
            set {
                this.metaListRecordIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool newStructure {
            get {
                return this.newStructureField;
            }
            set {
                this.newStructureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool newStructureSpecified {
            get {
                return this.newStructureFieldSpecified;
            }
            set {
                this.newStructureFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool onCheckout {
            get {
                return this.onCheckoutField;
            }
            set {
                this.onCheckoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int parentDocumentId {
            get {
                return this.parentDocumentIdField;
            }
            set {
                this.parentDocumentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool parentDocumentIdSpecified {
            get {
                return this.parentDocumentIdFieldSpecified;
            }
            set {
                this.parentDocumentIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int permissionType {
            get {
                return this.permissionTypeField;
            }
            set {
                this.permissionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionTypeSpecified {
            get {
                return this.permissionTypeFieldSpecified;
            }
            set {
                this.permissionTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string phisicalFile {
            get {
                return this.phisicalFileField;
            }
            set {
                this.phisicalFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float phisicalFileSize {
            get {
                return this.phisicalFileSizeField;
            }
            set {
                this.phisicalFileSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phisicalFileSizeSpecified {
            get {
                return this.phisicalFileSizeFieldSpecified;
            }
            set {
                this.phisicalFileSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prioritySpecified {
            get {
                return this.priorityFieldSpecified;
            }
            set {
                this.priorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string privateColleagueId {
            get {
                return this.privateColleagueIdField;
            }
            set {
                this.privateColleagueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool privateDocument {
            get {
                return this.privateDocumentField;
            }
            set {
                this.privateDocumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool privateDocumentSpecified {
            get {
                return this.privateDocumentFieldSpecified;
            }
            set {
                this.privateDocumentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool protectedCopy {
            get {
                return this.protectedCopyField;
            }
            set {
                this.protectedCopyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool protectedCopySpecified {
            get {
                return this.protectedCopyFieldSpecified;
            }
            set {
                this.protectedCopyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string publisherId {
            get {
                return this.publisherIdField;
            }
            set {
                this.publisherIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string publisherName {
            get {
                return this.publisherNameField;
            }
            set {
                this.publisherNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string relatedFiles {
            get {
                return this.relatedFilesField;
            }
            set {
                this.relatedFilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int restrictionType {
            get {
                return this.restrictionTypeField;
            }
            set {
                this.restrictionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool restrictionTypeSpecified {
            get {
                return this.restrictionTypeFieldSpecified;
            }
            set {
                this.restrictionTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int rowId {
            get {
                return this.rowIdField;
            }
            set {
                this.rowIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int searchNumber {
            get {
                return this.searchNumberField;
            }
            set {
                this.searchNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool searchNumberSpecified {
            get {
                return this.searchNumberFieldSpecified;
            }
            set {
                this.searchNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int securityLevel {
            get {
                return this.securityLevelField;
            }
            set {
                this.securityLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string siteCode {
            get {
                return this.siteCodeField;
            }
            set {
                this.siteCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sociableDocumentDto sociableDocumentDto {
            get {
                return this.sociableDocumentDtoField;
            }
            set {
                this.sociableDocumentDtoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool tool {
            get {
                return this.toolField;
            }
            set {
                this.toolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool toolSpecified {
            get {
                return this.toolFieldSpecified;
            }
            set {
                this.toolFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int topicId {
            get {
                return this.topicIdField;
            }
            set {
                this.topicIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool topicIdSpecified {
            get {
                return this.topicIdFieldSpecified;
            }
            set {
                this.topicIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool translated {
            get {
                return this.translatedField;
            }
            set {
                this.translatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UUID {
            get {
                return this.uUIDField;
            }
            set {
                this.uUIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool updateIsoProperties {
            get {
                return this.updateIsoPropertiesField;
            }
            set {
                this.updateIsoPropertiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool userAnswerForm {
            get {
                return this.userAnswerFormField;
            }
            set {
                this.userAnswerFormField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userAnswerFormSpecified {
            get {
                return this.userAnswerFormFieldSpecified;
            }
            set {
                this.userAnswerFormFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool userNotify {
            get {
                return this.userNotifyField;
            }
            set {
                this.userNotifyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userNotifySpecified {
            get {
                return this.userNotifyFieldSpecified;
            }
            set {
                this.userNotifyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int userPermission {
            get {
                return this.userPermissionField;
            }
            set {
                this.userPermissionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userPermissionSpecified {
            get {
                return this.userPermissionFieldSpecified;
            }
            set {
                this.userPermissionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime validationStartDate {
            get {
                return this.validationStartDateField;
            }
            set {
                this.validationStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool validationStartDateSpecified {
            get {
                return this.validationStartDateFieldSpecified;
            }
            set {
                this.validationStartDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string versionDescription {
            get {
                return this.versionDescriptionField;
            }
            set {
                this.versionDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string versionOption {
            get {
                return this.versionOptionField;
            }
            set {
                this.versionOptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string volumeId {
            get {
                return this.volumeIdField;
            }
            set {
                this.volumeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class documentApprovalStatusDto {
        
        private long companyIdField;
        
        private int documentIdField;
        
        private int statusField;
        
        private int versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getDocumentApprovalHistoryCompletedEventHandler(object sender, getDocumentApprovalHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentApprovalHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentApprovalHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentApprovementHistoryDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentApprovementHistoryDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getDocumentApprovalStatusCompletedEventHandler(object sender, getDocumentApprovalStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentApprovalStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentApprovalStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentApprovalStatusDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentApprovalStatusDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createDocumentCompletedEventHandler(object sender, createDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void restoreDocumentCompletedEventHandler(object sender, restoreDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class restoreDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal restoreDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getDocumentContentCompletedEventHandler(object sender, getDocumentContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void approveDocumentCompletedEventHandler(object sender, approveDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class approveDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal approveDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getDocumentVersionCompletedEventHandler(object sender, getDocumentVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void destroyDocumentCompletedEventHandler(object sender, destroyDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class destroyDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal destroyDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void validateIntegrationRequirementsCompletedEventHandler(object sender, validateIntegrationRequirementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateIntegrationRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateIntegrationRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getUserPermissionsCompletedEventHandler(object sender, getUserPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateDocumentConversionStatusCompletedEventHandler(object sender, updateDocumentConversionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateDocumentConversionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateDocumentConversionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getApproversCompletedEventHandler(object sender, getApproversCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApproversCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApproversCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public approverWithLevelDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((approverWithLevelDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void findRecycledDocumentsCompletedEventHandler(object sender, findRecycledDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findRecycledDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findRecycledDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateSimpleDocumentCompletedEventHandler(object sender, updateSimpleDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSimpleDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSimpleDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void destroyDocumentApprovalCompletedEventHandler(object sender, destroyDocumentApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class destroyDocumentApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal destroyDocumentApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void moveDocumentCompletedEventHandler(object sender, moveDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createSimpleDocumentCompletedEventHandler(object sender, createSimpleDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSimpleDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSimpleDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateDocumentCompletedEventHandler(object sender, updateDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getSecurityCompletedEventHandler(object sender, getSecurityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSecurityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSecurityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentSecurityConfigDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentSecurityConfigDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getRelatedDocumentsCompletedEventHandler(object sender, getRelatedDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRelatedDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRelatedDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public relatedDocumentDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((relatedDocumentDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getDocumentByExternalIdCompletedEventHandler(object sender, getDocumentByExternalIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentByExternalIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentByExternalIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void copyDocumentToUploadAreaCompletedEventHandler(object sender, copyDocumentToUploadAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyDocumentToUploadAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyDocumentToUploadAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getReportSubjectIdCompletedEventHandler(object sender, getReportSubjectIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReportSubjectIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReportSubjectIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateGroupSecurityTypeCompletedEventHandler(object sender, updateGroupSecurityTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateGroupSecurityTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateGroupSecurityTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateDocumentWithApprovementLevelsCompletedEventHandler(object sender, updateDocumentWithApprovementLevelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateDocumentWithApprovementLevelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateDocumentWithApprovementLevelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void findMostPopularDocumentsCompletedEventHandler(object sender, findMostPopularDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findMostPopularDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findMostPopularDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void deleteDocumentCompletedEventHandler(object sender, deleteDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createSimpleDocumentPrivateCompletedEventHandler(object sender, createSimpleDocumentPrivateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSimpleDocumentPrivateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSimpleDocumentPrivateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void findMostPopularDocumentsOnDemandCompletedEventHandler(object sender, findMostPopularDocumentsOnDemandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findMostPopularDocumentsOnDemandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findMostPopularDocumentsOnDemandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void removeSecurityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createDocumentWithApprovementLevelsCompletedEventHandler(object sender, createDocumentWithApprovementLevelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createDocumentWithApprovementLevelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createDocumentWithApprovementLevelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getActiveDocumentCompletedEventHandler(object sender, getActiveDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActiveDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActiveDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentDto[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
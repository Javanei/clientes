//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace ecmfiles.ECMFolderService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FolderServiceServiceSoapBinding", Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class FolderServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getUserPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApproversOperationCompleted;
        
        private System.Threading.SendOrPostCallback findRecycledDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubPrivateFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback restoreDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback createFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubFoldersOnDemandOperationCompleted;
        
        private System.Threading.SendOrPostCallback getChildrenOperationCompleted;
        
        private System.Threading.SendOrPostCallback destroyDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubFoldersPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateFolderWithApprovementLevelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPrivateChildrenOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSecurityOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRootFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback createFolderWithApprovementLevelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSimpleFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSimpleFolderOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FolderServiceService() {
            this.Url = global::ecmfiles.Properties.Settings.Default.ecmfiles_ECMFolderService_FolderServiceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getUserPermissionsCompletedEventHandler getUserPermissionsCompleted;
        
        /// <remarks/>
        public event getFolderCompletedEventHandler getFolderCompleted;
        
        /// <remarks/>
        public event getApproversCompletedEventHandler getApproversCompleted;
        
        /// <remarks/>
        public event findRecycledDocumentsCompletedEventHandler findRecycledDocumentsCompleted;
        
        /// <remarks/>
        public event getSubPrivateFoldersCompletedEventHandler getSubPrivateFoldersCompleted;
        
        /// <remarks/>
        public event restoreDocumentCompletedEventHandler restoreDocumentCompleted;
        
        /// <remarks/>
        public event createFolderCompletedEventHandler createFolderCompleted;
        
        /// <remarks/>
        public event getSubFoldersOnDemandCompletedEventHandler getSubFoldersOnDemandCompleted;
        
        /// <remarks/>
        public event getChildrenCompletedEventHandler getChildrenCompleted;
        
        /// <remarks/>
        public event destroyDocumentCompletedEventHandler destroyDocumentCompleted;
        
        /// <remarks/>
        public event updateFolderCompletedEventHandler updateFolderCompleted;
        
        /// <remarks/>
        public event getSubFoldersPermissionCompletedEventHandler getSubFoldersPermissionCompleted;
        
        /// <remarks/>
        public event updateFolderWithApprovementLevelsCompletedEventHandler updateFolderWithApprovementLevelsCompleted;
        
        /// <remarks/>
        public event deleteDocumentCompletedEventHandler deleteDocumentCompleted;
        
        /// <remarks/>
        public event getPrivateChildrenCompletedEventHandler getPrivateChildrenCompleted;
        
        /// <remarks/>
        public event getSecurityCompletedEventHandler getSecurityCompleted;
        
        /// <remarks/>
        public event getRootFoldersCompletedEventHandler getRootFoldersCompleted;
        
        /// <remarks/>
        public event createFolderWithApprovementLevelsCompletedEventHandler createFolderWithApprovementLevelsCompleted;
        
        /// <remarks/>
        public event getSubFoldersCompletedEventHandler getSubFoldersCompleted;
        
        /// <remarks/>
        public event updateSimpleFolderCompletedEventHandler updateSimpleFolderCompleted;
        
        /// <remarks/>
        public event createSimpleFolderCompletedEventHandler createSimpleFolderCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getUserPermissions", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public int getUserPermissions(int companyId, string username, int documentId, int version) {
            object[] results = this.Invoke("getUserPermissions", new object[] {
                        companyId,
                        username,
                        documentId,
                        version});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getUserPermissionsAsync(int companyId, string username, int documentId, int version) {
            this.getUserPermissionsAsync(companyId, username, documentId, version, null);
        }
        
        /// <remarks/>
        public void getUserPermissionsAsync(int companyId, string username, int documentId, int version, object userState) {
            if ((this.getUserPermissionsOperationCompleted == null)) {
                this.getUserPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserPermissionsOperationCompleted);
            }
            this.InvokeAsync("getUserPermissions", new object[] {
                        companyId,
                        username,
                        documentId,
                        version}, this.getUserPermissionsOperationCompleted, userState);
        }
        
        private void OngetUserPermissionsOperationCompleted(object arg) {
            if ((this.getUserPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserPermissionsCompleted(this, new getUserPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getFolder", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Document")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentDto[] getFolder(string username, string password, int companyId, int documentId, string colleagueId) {
            object[] results = this.Invoke("getFolder", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        colleagueId});
            return ((documentDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getFolderAsync(string username, string password, int companyId, int documentId, string colleagueId) {
            this.getFolderAsync(username, password, companyId, documentId, colleagueId, null);
        }
        
        /// <remarks/>
        public void getFolderAsync(string username, string password, int companyId, int documentId, string colleagueId, object userState) {
            if ((this.getFolderOperationCompleted == null)) {
                this.getFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFolderOperationCompleted);
            }
            this.InvokeAsync("getFolder", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        colleagueId}, this.getFolderOperationCompleted, userState);
        }
        
        private void OngetFolderOperationCompleted(object arg) {
            if ((this.getFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFolderCompleted(this, new getFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getApprovers", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Approvers")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public approverWithLevelDto[] getApprovers(string username, string password, int companyId, int documentId) {
            object[] results = this.Invoke("getApprovers", new object[] {
                        username,
                        password,
                        companyId,
                        documentId});
            return ((approverWithLevelDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getApproversAsync(string username, string password, int companyId, int documentId) {
            this.getApproversAsync(username, password, companyId, documentId, null);
        }
        
        /// <remarks/>
        public void getApproversAsync(string username, string password, int companyId, int documentId, object userState) {
            if ((this.getApproversOperationCompleted == null)) {
                this.getApproversOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApproversOperationCompleted);
            }
            this.InvokeAsync("getApprovers", new object[] {
                        username,
                        password,
                        companyId,
                        documentId}, this.getApproversOperationCompleted, userState);
        }
        
        private void OngetApproversOperationCompleted(object arg) {
            if ((this.getApproversCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApproversCompleted(this, new getApproversCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("findRecycledDocuments", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentDto[] findRecycledDocuments(string user, string password, int companyId, string colleagueId) {
            object[] results = this.Invoke("findRecycledDocuments", new object[] {
                        user,
                        password,
                        companyId,
                        colleagueId});
            return ((documentDto[])(results[0]));
        }
        
        /// <remarks/>
        public void findRecycledDocumentsAsync(string user, string password, int companyId, string colleagueId) {
            this.findRecycledDocumentsAsync(user, password, companyId, colleagueId, null);
        }
        
        /// <remarks/>
        public void findRecycledDocumentsAsync(string user, string password, int companyId, string colleagueId, object userState) {
            if ((this.findRecycledDocumentsOperationCompleted == null)) {
                this.findRecycledDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindRecycledDocumentsOperationCompleted);
            }
            this.InvokeAsync("findRecycledDocuments", new object[] {
                        user,
                        password,
                        companyId,
                        colleagueId}, this.findRecycledDocumentsOperationCompleted, userState);
        }
        
        private void OnfindRecycledDocumentsOperationCompleted(object arg) {
            if ((this.findRecycledDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findRecycledDocumentsCompleted(this, new findRecycledDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getSubPrivateFolders", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Document")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentDto[] getSubPrivateFolders(string username, string password, int companyId, int documentId) {
            object[] results = this.Invoke("getSubPrivateFolders", new object[] {
                        username,
                        password,
                        companyId,
                        documentId});
            return ((documentDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getSubPrivateFoldersAsync(string username, string password, int companyId, int documentId) {
            this.getSubPrivateFoldersAsync(username, password, companyId, documentId, null);
        }
        
        /// <remarks/>
        public void getSubPrivateFoldersAsync(string username, string password, int companyId, int documentId, object userState) {
            if ((this.getSubPrivateFoldersOperationCompleted == null)) {
                this.getSubPrivateFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubPrivateFoldersOperationCompleted);
            }
            this.InvokeAsync("getSubPrivateFolders", new object[] {
                        username,
                        password,
                        companyId,
                        documentId}, this.getSubPrivateFoldersOperationCompleted, userState);
        }
        
        private void OngetSubPrivateFoldersOperationCompleted(object arg) {
            if ((this.getSubPrivateFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubPrivateFoldersCompleted(this, new getSubPrivateFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("restoreDocument", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] restoreDocument(string user, string password, int companyId, int documentId, string colleagueId) {
            object[] results = this.Invoke("restoreDocument", new object[] {
                        user,
                        password,
                        companyId,
                        documentId,
                        colleagueId});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void restoreDocumentAsync(string user, string password, int companyId, int documentId, string colleagueId) {
            this.restoreDocumentAsync(user, password, companyId, documentId, colleagueId, null);
        }
        
        /// <remarks/>
        public void restoreDocumentAsync(string user, string password, int companyId, int documentId, string colleagueId, object userState) {
            if ((this.restoreDocumentOperationCompleted == null)) {
                this.restoreDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrestoreDocumentOperationCompleted);
            }
            this.InvokeAsync("restoreDocument", new object[] {
                        user,
                        password,
                        companyId,
                        documentId,
                        colleagueId}, this.restoreDocumentOperationCompleted, userState);
        }
        
        private void OnrestoreDocumentOperationCompleted(object arg) {
            if ((this.restoreDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.restoreDocumentCompleted(this, new restoreDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("createFolder", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] createFolder(string username, string password, int companyId, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentDto[] Document, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentSecurityConfigDto[] security, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] approverDto[] Approvers) {
            object[] results = this.Invoke("createFolder", new object[] {
                        username,
                        password,
                        companyId,
                        Document,
                        security,
                        Approvers});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void createFolderAsync(string username, string password, int companyId, documentDto[] Document, documentSecurityConfigDto[] security, approverDto[] Approvers) {
            this.createFolderAsync(username, password, companyId, Document, security, Approvers, null);
        }
        
        /// <remarks/>
        public void createFolderAsync(string username, string password, int companyId, documentDto[] Document, documentSecurityConfigDto[] security, approverDto[] Approvers, object userState) {
            if ((this.createFolderOperationCompleted == null)) {
                this.createFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateFolderOperationCompleted);
            }
            this.InvokeAsync("createFolder", new object[] {
                        username,
                        password,
                        companyId,
                        Document,
                        security,
                        Approvers}, this.createFolderOperationCompleted, userState);
        }
        
        private void OncreateFolderOperationCompleted(object arg) {
            if ((this.createFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createFolderCompleted(this, new createFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getSubFoldersOnDemand", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("DocumentDto")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentDto[] getSubFoldersOnDemand(int companyId, string user, string password, int parentDocumentId, bool privateFolder, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] documentTypes, int limit, int lastRowId, string colleagueId) {
            object[] results = this.Invoke("getSubFoldersOnDemand", new object[] {
                        companyId,
                        user,
                        password,
                        parentDocumentId,
                        privateFolder,
                        documentTypes,
                        limit,
                        lastRowId,
                        colleagueId});
            return ((documentDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getSubFoldersOnDemandAsync(int companyId, string user, string password, int parentDocumentId, bool privateFolder, string[] documentTypes, int limit, int lastRowId, string colleagueId) {
            this.getSubFoldersOnDemandAsync(companyId, user, password, parentDocumentId, privateFolder, documentTypes, limit, lastRowId, colleagueId, null);
        }
        
        /// <remarks/>
        public void getSubFoldersOnDemandAsync(int companyId, string user, string password, int parentDocumentId, bool privateFolder, string[] documentTypes, int limit, int lastRowId, string colleagueId, object userState) {
            if ((this.getSubFoldersOnDemandOperationCompleted == null)) {
                this.getSubFoldersOnDemandOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubFoldersOnDemandOperationCompleted);
            }
            this.InvokeAsync("getSubFoldersOnDemand", new object[] {
                        companyId,
                        user,
                        password,
                        parentDocumentId,
                        privateFolder,
                        documentTypes,
                        limit,
                        lastRowId,
                        colleagueId}, this.getSubFoldersOnDemandOperationCompleted, userState);
        }
        
        private void OngetSubFoldersOnDemandOperationCompleted(object arg) {
            if ((this.getSubFoldersOnDemandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubFoldersOnDemandCompleted(this, new getSubFoldersOnDemandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getChildren", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Document")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentDto[] getChildren(string username, string password, int companyId, int documentId, string colleagueId) {
            object[] results = this.Invoke("getChildren", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        colleagueId});
            return ((documentDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getChildrenAsync(string username, string password, int companyId, int documentId, string colleagueId) {
            this.getChildrenAsync(username, password, companyId, documentId, colleagueId, null);
        }
        
        /// <remarks/>
        public void getChildrenAsync(string username, string password, int companyId, int documentId, string colleagueId, object userState) {
            if ((this.getChildrenOperationCompleted == null)) {
                this.getChildrenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetChildrenOperationCompleted);
            }
            this.InvokeAsync("getChildren", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        colleagueId}, this.getChildrenOperationCompleted, userState);
        }
        
        private void OngetChildrenOperationCompleted(object arg) {
            if ((this.getChildrenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getChildrenCompleted(this, new getChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("destroyDocument", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] destroyDocument(string user, string password, int companyId, int documentId, string colleagueId) {
            object[] results = this.Invoke("destroyDocument", new object[] {
                        user,
                        password,
                        companyId,
                        documentId,
                        colleagueId});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void destroyDocumentAsync(string user, string password, int companyId, int documentId, string colleagueId) {
            this.destroyDocumentAsync(user, password, companyId, documentId, colleagueId, null);
        }
        
        /// <remarks/>
        public void destroyDocumentAsync(string user, string password, int companyId, int documentId, string colleagueId, object userState) {
            if ((this.destroyDocumentOperationCompleted == null)) {
                this.destroyDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndestroyDocumentOperationCompleted);
            }
            this.InvokeAsync("destroyDocument", new object[] {
                        user,
                        password,
                        companyId,
                        documentId,
                        colleagueId}, this.destroyDocumentOperationCompleted, userState);
        }
        
        private void OndestroyDocumentOperationCompleted(object arg) {
            if ((this.destroyDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.destroyDocumentCompleted(this, new destroyDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("updateFolder", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] updateFolder(string username, string password, int companyId, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentDto[] Document, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentSecurityConfigDto[] security, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] approverDto[] Approvers) {
            object[] results = this.Invoke("updateFolder", new object[] {
                        username,
                        password,
                        companyId,
                        Document,
                        security,
                        Approvers});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void updateFolderAsync(string username, string password, int companyId, documentDto[] Document, documentSecurityConfigDto[] security, approverDto[] Approvers) {
            this.updateFolderAsync(username, password, companyId, Document, security, Approvers, null);
        }
        
        /// <remarks/>
        public void updateFolderAsync(string username, string password, int companyId, documentDto[] Document, documentSecurityConfigDto[] security, approverDto[] Approvers, object userState) {
            if ((this.updateFolderOperationCompleted == null)) {
                this.updateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateFolderOperationCompleted);
            }
            this.InvokeAsync("updateFolder", new object[] {
                        username,
                        password,
                        companyId,
                        Document,
                        security,
                        Approvers}, this.updateFolderOperationCompleted, userState);
        }
        
        private void OnupdateFolderOperationCompleted(object arg) {
            if ((this.updateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateFolderCompleted(this, new updateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getSubFoldersPermission", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Document")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentDto[] getSubFoldersPermission(string username, string password, int companyId, int documentId, string colleagueId, int permission) {
            object[] results = this.Invoke("getSubFoldersPermission", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        colleagueId,
                        permission});
            return ((documentDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getSubFoldersPermissionAsync(string username, string password, int companyId, int documentId, string colleagueId, int permission) {
            this.getSubFoldersPermissionAsync(username, password, companyId, documentId, colleagueId, permission, null);
        }
        
        /// <remarks/>
        public void getSubFoldersPermissionAsync(string username, string password, int companyId, int documentId, string colleagueId, int permission, object userState) {
            if ((this.getSubFoldersPermissionOperationCompleted == null)) {
                this.getSubFoldersPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubFoldersPermissionOperationCompleted);
            }
            this.InvokeAsync("getSubFoldersPermission", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        colleagueId,
                        permission}, this.getSubFoldersPermissionOperationCompleted, userState);
        }
        
        private void OngetSubFoldersPermissionOperationCompleted(object arg) {
            if ((this.getSubFoldersPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubFoldersPermissionCompleted(this, new getSubFoldersPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("updateFolderWithApprovementLevels", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] updateFolderWithApprovementLevels(string username, string password, int companyId, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentDto[] Document, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentSecurityConfigDto[] security, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] approverWithLevelDto[] ApproversWithLevels, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] approvalLevelDto[] Levels) {
            object[] results = this.Invoke("updateFolderWithApprovementLevels", new object[] {
                        username,
                        password,
                        companyId,
                        Document,
                        security,
                        ApproversWithLevels,
                        Levels});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void updateFolderWithApprovementLevelsAsync(string username, string password, int companyId, documentDto[] Document, documentSecurityConfigDto[] security, approverWithLevelDto[] ApproversWithLevels, approvalLevelDto[] Levels) {
            this.updateFolderWithApprovementLevelsAsync(username, password, companyId, Document, security, ApproversWithLevels, Levels, null);
        }
        
        /// <remarks/>
        public void updateFolderWithApprovementLevelsAsync(string username, string password, int companyId, documentDto[] Document, documentSecurityConfigDto[] security, approverWithLevelDto[] ApproversWithLevels, approvalLevelDto[] Levels, object userState) {
            if ((this.updateFolderWithApprovementLevelsOperationCompleted == null)) {
                this.updateFolderWithApprovementLevelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateFolderWithApprovementLevelsOperationCompleted);
            }
            this.InvokeAsync("updateFolderWithApprovementLevels", new object[] {
                        username,
                        password,
                        companyId,
                        Document,
                        security,
                        ApproversWithLevels,
                        Levels}, this.updateFolderWithApprovementLevelsOperationCompleted, userState);
        }
        
        private void OnupdateFolderWithApprovementLevelsOperationCompleted(object arg) {
            if ((this.updateFolderWithApprovementLevelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateFolderWithApprovementLevelsCompleted(this, new updateFolderWithApprovementLevelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("deleteDocument", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] deleteDocument(string user, string password, int companyId, int documentId, string colleagueId) {
            object[] results = this.Invoke("deleteDocument", new object[] {
                        user,
                        password,
                        companyId,
                        documentId,
                        colleagueId});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void deleteDocumentAsync(string user, string password, int companyId, int documentId, string colleagueId) {
            this.deleteDocumentAsync(user, password, companyId, documentId, colleagueId, null);
        }
        
        /// <remarks/>
        public void deleteDocumentAsync(string user, string password, int companyId, int documentId, string colleagueId, object userState) {
            if ((this.deleteDocumentOperationCompleted == null)) {
                this.deleteDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDocumentOperationCompleted);
            }
            this.InvokeAsync("deleteDocument", new object[] {
                        user,
                        password,
                        companyId,
                        documentId,
                        colleagueId}, this.deleteDocumentOperationCompleted, userState);
        }
        
        private void OndeleteDocumentOperationCompleted(object arg) {
            if ((this.deleteDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDocumentCompleted(this, new deleteDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getPrivateChildren", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Document")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentDto[] getPrivateChildren(string username, string password, int companyId, int parentDocumentId) {
            object[] results = this.Invoke("getPrivateChildren", new object[] {
                        username,
                        password,
                        companyId,
                        parentDocumentId});
            return ((documentDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getPrivateChildrenAsync(string username, string password, int companyId, int parentDocumentId) {
            this.getPrivateChildrenAsync(username, password, companyId, parentDocumentId, null);
        }
        
        /// <remarks/>
        public void getPrivateChildrenAsync(string username, string password, int companyId, int parentDocumentId, object userState) {
            if ((this.getPrivateChildrenOperationCompleted == null)) {
                this.getPrivateChildrenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPrivateChildrenOperationCompleted);
            }
            this.InvokeAsync("getPrivateChildren", new object[] {
                        username,
                        password,
                        companyId,
                        parentDocumentId}, this.getPrivateChildrenOperationCompleted, userState);
        }
        
        private void OngetPrivateChildrenOperationCompleted(object arg) {
            if ((this.getPrivateChildrenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPrivateChildrenCompleted(this, new getPrivateChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getSecurity", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Security")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentSecurityConfigDto[] getSecurity(string username, string password, int companyId, int documentId) {
            object[] results = this.Invoke("getSecurity", new object[] {
                        username,
                        password,
                        companyId,
                        documentId});
            return ((documentSecurityConfigDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getSecurityAsync(string username, string password, int companyId, int documentId) {
            this.getSecurityAsync(username, password, companyId, documentId, null);
        }
        
        /// <remarks/>
        public void getSecurityAsync(string username, string password, int companyId, int documentId, object userState) {
            if ((this.getSecurityOperationCompleted == null)) {
                this.getSecurityOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSecurityOperationCompleted);
            }
            this.InvokeAsync("getSecurity", new object[] {
                        username,
                        password,
                        companyId,
                        documentId}, this.getSecurityOperationCompleted, userState);
        }
        
        private void OngetSecurityOperationCompleted(object arg) {
            if ((this.getSecurityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSecurityCompleted(this, new getSecurityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getRootFolders", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Document")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentDto[] getRootFolders(string username, string password, int companyId, string colleagueId) {
            object[] results = this.Invoke("getRootFolders", new object[] {
                        username,
                        password,
                        companyId,
                        colleagueId});
            return ((documentDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getRootFoldersAsync(string username, string password, int companyId, string colleagueId) {
            this.getRootFoldersAsync(username, password, companyId, colleagueId, null);
        }
        
        /// <remarks/>
        public void getRootFoldersAsync(string username, string password, int companyId, string colleagueId, object userState) {
            if ((this.getRootFoldersOperationCompleted == null)) {
                this.getRootFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRootFoldersOperationCompleted);
            }
            this.InvokeAsync("getRootFolders", new object[] {
                        username,
                        password,
                        companyId,
                        colleagueId}, this.getRootFoldersOperationCompleted, userState);
        }
        
        private void OngetRootFoldersOperationCompleted(object arg) {
            if ((this.getRootFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRootFoldersCompleted(this, new getRootFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("createFolderWithApprovementLevels", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] createFolderWithApprovementLevels(string username, string password, int companyId, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentDto[] Document, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentSecurityConfigDto[] security, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] approverWithLevelDto[] ApproversWithLevels, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] approvalLevelDto[] Levels) {
            object[] results = this.Invoke("createFolderWithApprovementLevels", new object[] {
                        username,
                        password,
                        companyId,
                        Document,
                        security,
                        ApproversWithLevels,
                        Levels});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void createFolderWithApprovementLevelsAsync(string username, string password, int companyId, documentDto[] Document, documentSecurityConfigDto[] security, approverWithLevelDto[] ApproversWithLevels, approvalLevelDto[] Levels) {
            this.createFolderWithApprovementLevelsAsync(username, password, companyId, Document, security, ApproversWithLevels, Levels, null);
        }
        
        /// <remarks/>
        public void createFolderWithApprovementLevelsAsync(string username, string password, int companyId, documentDto[] Document, documentSecurityConfigDto[] security, approverWithLevelDto[] ApproversWithLevels, approvalLevelDto[] Levels, object userState) {
            if ((this.createFolderWithApprovementLevelsOperationCompleted == null)) {
                this.createFolderWithApprovementLevelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateFolderWithApprovementLevelsOperationCompleted);
            }
            this.InvokeAsync("createFolderWithApprovementLevels", new object[] {
                        username,
                        password,
                        companyId,
                        Document,
                        security,
                        ApproversWithLevels,
                        Levels}, this.createFolderWithApprovementLevelsOperationCompleted, userState);
        }
        
        private void OncreateFolderWithApprovementLevelsOperationCompleted(object arg) {
            if ((this.createFolderWithApprovementLevelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createFolderWithApprovementLevelsCompleted(this, new createFolderWithApprovementLevelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getSubFolders", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Document")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public documentDto[] getSubFolders(string username, string password, int companyId, int documentId, string colleagueId) {
            object[] results = this.Invoke("getSubFolders", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        colleagueId});
            return ((documentDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getSubFoldersAsync(string username, string password, int companyId, int documentId, string colleagueId) {
            this.getSubFoldersAsync(username, password, companyId, documentId, colleagueId, null);
        }
        
        /// <remarks/>
        public void getSubFoldersAsync(string username, string password, int companyId, int documentId, string colleagueId, object userState) {
            if ((this.getSubFoldersOperationCompleted == null)) {
                this.getSubFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubFoldersOperationCompleted);
            }
            this.InvokeAsync("getSubFolders", new object[] {
                        username,
                        password,
                        companyId,
                        documentId,
                        colleagueId}, this.getSubFoldersOperationCompleted, userState);
        }
        
        private void OngetSubFoldersOperationCompleted(object arg) {
            if ((this.getSubFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubFoldersCompleted(this, new getSubFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("updateSimpleFolder", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] updateSimpleFolder(string username, string password, int companyId, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] documentDto[] Document) {
            object[] results = this.Invoke("updateSimpleFolder", new object[] {
                        username,
                        password,
                        companyId,
                        Document});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void updateSimpleFolderAsync(string username, string password, int companyId, documentDto[] Document) {
            this.updateSimpleFolderAsync(username, password, companyId, Document, null);
        }
        
        /// <remarks/>
        public void updateSimpleFolderAsync(string username, string password, int companyId, documentDto[] Document, object userState) {
            if ((this.updateSimpleFolderOperationCompleted == null)) {
                this.updateSimpleFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSimpleFolderOperationCompleted);
            }
            this.InvokeAsync("updateSimpleFolder", new object[] {
                        username,
                        password,
                        companyId,
                        Document}, this.updateSimpleFolderOperationCompleted, userState);
        }
        
        private void OnupdateSimpleFolderOperationCompleted(object arg) {
            if ((this.updateSimpleFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSimpleFolderCompleted(this, new updateSimpleFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("createSimpleFolder", RequestNamespace="http://ws.dm.webdesk.technology.datasul.com/", ResponseNamespace="http://ws.dm.webdesk.technology.datasul.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public webServiceMessage[] createSimpleFolder(string username, string password, int companyId, int parentDocumentId, string publisherId, string documentDescription) {
            object[] results = this.Invoke("createSimpleFolder", new object[] {
                        username,
                        password,
                        companyId,
                        parentDocumentId,
                        publisherId,
                        documentDescription});
            return ((webServiceMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void createSimpleFolderAsync(string username, string password, int companyId, int parentDocumentId, string publisherId, string documentDescription) {
            this.createSimpleFolderAsync(username, password, companyId, parentDocumentId, publisherId, documentDescription, null);
        }
        
        /// <remarks/>
        public void createSimpleFolderAsync(string username, string password, int companyId, int parentDocumentId, string publisherId, string documentDescription, object userState) {
            if ((this.createSimpleFolderOperationCompleted == null)) {
                this.createSimpleFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSimpleFolderOperationCompleted);
            }
            this.InvokeAsync("createSimpleFolder", new object[] {
                        username,
                        password,
                        companyId,
                        parentDocumentId,
                        publisherId,
                        documentDescription}, this.createSimpleFolderOperationCompleted, userState);
        }
        
        private void OncreateSimpleFolderOperationCompleted(object arg) {
            if ((this.createSimpleFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSimpleFolderCompleted(this, new createSimpleFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class documentDto {
        
        private int accessCountField;
        
        private bool accessCountFieldSpecified;
        
        private bool activeUserApproverField;
        
        private bool activeUserApproverFieldSpecified;
        
        private bool activeVersionField;
        
        private bool activeVersionFieldSpecified;
        
        private string additionalCommentsField;
        
        private bool allowMuiltiCardsPerUserField;
        
        private bool allowMuiltiCardsPerUserFieldSpecified;
        
        private bool approvalAndOrField;
        
        private bool approvalAndOrFieldSpecified;
        
        private bool approvedField;
        
        private bool approvedFieldSpecified;
        
        private System.DateTime approvedDateField;
        
        private bool approvedDateFieldSpecified;
        
        private string articleContentField;
        
        private int atualizationIdField;
        
        private bool atualizationIdFieldSpecified;
        
        private string backgroundColorField;
        
        private string backgroundImageField;
        
        private string bannerImageField;
        
        private string cardDescriptionField;
        
        private string colleagueIdField;
        
        private string colleagueNameField;
        
        private long companyIdField;
        
        private long crcField;
        
        private bool crcFieldSpecified;
        
        private System.DateTime createDateField;
        
        private bool createDateFieldSpecified;
        
        private string datasetNameField;
        
        private bool dateFormStartedField;
        
        private bool dateFormStartedFieldSpecified;
        
        private bool deletedField;
        
        private bool deletedFieldSpecified;
        
        private string documentDescriptionField;
        
        private int documentIdField;
        
        private bool documentIdFieldSpecified;
        
        private string documentKeyWordField;
        
        private int documentPropertyNumberField;
        
        private bool documentPropertyNumberFieldSpecified;
        
        private int documentPropertyVersionField;
        
        private bool documentPropertyVersionFieldSpecified;
        
        private string documentTypeField;
        
        private string documentTypeIdField;
        
        private bool downloadEnabledField;
        
        private bool downloadEnabledFieldSpecified;
        
        private bool draftField;
        
        private bool draftFieldSpecified;
        
        private System.DateTime expirationDateField;
        
        private bool expirationDateFieldSpecified;
        
        private bool expiredFormField;
        
        private bool expiredFormFieldSpecified;
        
        private bool expiresField;
        
        private bool expiresFieldSpecified;
        
        private string externalDocumentIdField;
        
        private bool favoriteField;
        
        private bool favoriteFieldSpecified;
        
        private int folderIdField;
        
        private bool folderIdFieldSpecified;
        
        private bool forAprovalField;
        
        private int iconIdField;
        
        private bool iconIdFieldSpecified;
        
        private string iconPathField;
        
        private bool imutableField;
        
        private bool imutableFieldSpecified;
        
        private bool indexedField;
        
        private bool indexedFieldSpecified;
        
        private bool inheritSecurityField;
        
        private bool internalVisualizerField;
        
        private bool internalVisualizerFieldSpecified;
        
        private bool isEncryptedField;
        
        private bool isEncryptedFieldSpecified;
        
        private string keyWordField;
        
        private string languageIdField;
        
        private string languageIndicatorField;
        
        private System.DateTime lastModifiedDateField;
        
        private bool lastModifiedDateFieldSpecified;
        
        private string lastModifiedTimeField;
        
        private int metaListIdField;
        
        private bool metaListIdFieldSpecified;
        
        private int metaListRecordIdField;
        
        private bool metaListRecordIdFieldSpecified;
        
        private bool newStructureField;
        
        private bool newStructureFieldSpecified;
        
        private bool onCheckoutField;
        
        private int parentDocumentIdField;
        
        private bool parentDocumentIdFieldSpecified;
        
        private int permissionTypeField;
        
        private bool permissionTypeFieldSpecified;
        
        private string phisicalFileField;
        
        private float phisicalFileSizeField;
        
        private bool phisicalFileSizeFieldSpecified;
        
        private int priorityField;
        
        private bool priorityFieldSpecified;
        
        private string privateColleagueIdField;
        
        private bool privateDocumentField;
        
        private bool privateDocumentFieldSpecified;
        
        private bool protectedCopyField;
        
        private bool protectedCopyFieldSpecified;
        
        private string publisherIdField;
        
        private string publisherNameField;
        
        private string relatedFilesField;
        
        private int restrictionTypeField;
        
        private bool restrictionTypeFieldSpecified;
        
        private int rowIdField;
        
        private int searchNumberField;
        
        private bool searchNumberFieldSpecified;
        
        private int securityLevelField;
        
        private string siteCodeField;
        
        private sociableDocumentDto sociableDocumentDtoField;
        
        private bool toolField;
        
        private bool toolFieldSpecified;
        
        private int topicIdField;
        
        private bool topicIdFieldSpecified;
        
        private bool translatedField;
        
        private string uUIDField;
        
        private bool updateIsoPropertiesField;
        
        private bool userAnswerFormField;
        
        private bool userAnswerFormFieldSpecified;
        
        private bool userNotifyField;
        
        private bool userNotifyFieldSpecified;
        
        private int userPermissionField;
        
        private bool userPermissionFieldSpecified;
        
        private System.DateTime validationStartDateField;
        
        private bool validationStartDateFieldSpecified;
        
        private int versionField;
        
        private string versionDescriptionField;
        
        private string versionOptionField;
        
        private string visualizationField;
        
        private string volumeIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int accessCount {
            get {
                return this.accessCountField;
            }
            set {
                this.accessCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool accessCountSpecified {
            get {
                return this.accessCountFieldSpecified;
            }
            set {
                this.accessCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool activeUserApprover {
            get {
                return this.activeUserApproverField;
            }
            set {
                this.activeUserApproverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activeUserApproverSpecified {
            get {
                return this.activeUserApproverFieldSpecified;
            }
            set {
                this.activeUserApproverFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool activeVersion {
            get {
                return this.activeVersionField;
            }
            set {
                this.activeVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activeVersionSpecified {
            get {
                return this.activeVersionFieldSpecified;
            }
            set {
                this.activeVersionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string additionalComments {
            get {
                return this.additionalCommentsField;
            }
            set {
                this.additionalCommentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowMuiltiCardsPerUser {
            get {
                return this.allowMuiltiCardsPerUserField;
            }
            set {
                this.allowMuiltiCardsPerUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowMuiltiCardsPerUserSpecified {
            get {
                return this.allowMuiltiCardsPerUserFieldSpecified;
            }
            set {
                this.allowMuiltiCardsPerUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool approvalAndOr {
            get {
                return this.approvalAndOrField;
            }
            set {
                this.approvalAndOrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool approvalAndOrSpecified {
            get {
                return this.approvalAndOrFieldSpecified;
            }
            set {
                this.approvalAndOrFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool approvedSpecified {
            get {
                return this.approvedFieldSpecified;
            }
            set {
                this.approvedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime approvedDate {
            get {
                return this.approvedDateField;
            }
            set {
                this.approvedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool approvedDateSpecified {
            get {
                return this.approvedDateFieldSpecified;
            }
            set {
                this.approvedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string articleContent {
            get {
                return this.articleContentField;
            }
            set {
                this.articleContentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int atualizationId {
            get {
                return this.atualizationIdField;
            }
            set {
                this.atualizationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool atualizationIdSpecified {
            get {
                return this.atualizationIdFieldSpecified;
            }
            set {
                this.atualizationIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string backgroundColor {
            get {
                return this.backgroundColorField;
            }
            set {
                this.backgroundColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string backgroundImage {
            get {
                return this.backgroundImageField;
            }
            set {
                this.backgroundImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bannerImage {
            get {
                return this.bannerImageField;
            }
            set {
                this.bannerImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cardDescription {
            get {
                return this.cardDescriptionField;
            }
            set {
                this.cardDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string colleagueId {
            get {
                return this.colleagueIdField;
            }
            set {
                this.colleagueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string colleagueName {
            get {
                return this.colleagueNameField;
            }
            set {
                this.colleagueNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long crc {
            get {
                return this.crcField;
            }
            set {
                this.crcField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool crcSpecified {
            get {
                return this.crcFieldSpecified;
            }
            set {
                this.crcFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime createDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createDateSpecified {
            get {
                return this.createDateFieldSpecified;
            }
            set {
                this.createDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string datasetName {
            get {
                return this.datasetNameField;
            }
            set {
                this.datasetNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dateFormStarted {
            get {
                return this.dateFormStartedField;
            }
            set {
                this.dateFormStartedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateFormStartedSpecified {
            get {
                return this.dateFormStartedFieldSpecified;
            }
            set {
                this.dateFormStartedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deletedSpecified {
            get {
                return this.deletedFieldSpecified;
            }
            set {
                this.deletedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentDescription {
            get {
                return this.documentDescriptionField;
            }
            set {
                this.documentDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentIdSpecified {
            get {
                return this.documentIdFieldSpecified;
            }
            set {
                this.documentIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentKeyWord {
            get {
                return this.documentKeyWordField;
            }
            set {
                this.documentKeyWordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentPropertyNumber {
            get {
                return this.documentPropertyNumberField;
            }
            set {
                this.documentPropertyNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentPropertyNumberSpecified {
            get {
                return this.documentPropertyNumberFieldSpecified;
            }
            set {
                this.documentPropertyNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentPropertyVersion {
            get {
                return this.documentPropertyVersionField;
            }
            set {
                this.documentPropertyVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentPropertyVersionSpecified {
            get {
                return this.documentPropertyVersionFieldSpecified;
            }
            set {
                this.documentPropertyVersionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentType {
            get {
                return this.documentTypeField;
            }
            set {
                this.documentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentTypeId {
            get {
                return this.documentTypeIdField;
            }
            set {
                this.documentTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool downloadEnabled {
            get {
                return this.downloadEnabledField;
            }
            set {
                this.downloadEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool downloadEnabledSpecified {
            get {
                return this.downloadEnabledFieldSpecified;
            }
            set {
                this.downloadEnabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool draft {
            get {
                return this.draftField;
            }
            set {
                this.draftField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool draftSpecified {
            get {
                return this.draftFieldSpecified;
            }
            set {
                this.draftFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expirationDateSpecified {
            get {
                return this.expirationDateFieldSpecified;
            }
            set {
                this.expirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool expiredForm {
            get {
                return this.expiredFormField;
            }
            set {
                this.expiredFormField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expiredFormSpecified {
            get {
                return this.expiredFormFieldSpecified;
            }
            set {
                this.expiredFormFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool expires {
            get {
                return this.expiresField;
            }
            set {
                this.expiresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expiresSpecified {
            get {
                return this.expiresFieldSpecified;
            }
            set {
                this.expiresFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string externalDocumentId {
            get {
                return this.externalDocumentIdField;
            }
            set {
                this.externalDocumentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool favorite {
            get {
                return this.favoriteField;
            }
            set {
                this.favoriteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool favoriteSpecified {
            get {
                return this.favoriteFieldSpecified;
            }
            set {
                this.favoriteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int folderId {
            get {
                return this.folderIdField;
            }
            set {
                this.folderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool folderIdSpecified {
            get {
                return this.folderIdFieldSpecified;
            }
            set {
                this.folderIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool forAproval {
            get {
                return this.forAprovalField;
            }
            set {
                this.forAprovalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int iconId {
            get {
                return this.iconIdField;
            }
            set {
                this.iconIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool iconIdSpecified {
            get {
                return this.iconIdFieldSpecified;
            }
            set {
                this.iconIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string iconPath {
            get {
                return this.iconPathField;
            }
            set {
                this.iconPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool imutable {
            get {
                return this.imutableField;
            }
            set {
                this.imutableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool imutableSpecified {
            get {
                return this.imutableFieldSpecified;
            }
            set {
                this.imutableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool indexed {
            get {
                return this.indexedField;
            }
            set {
                this.indexedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool indexedSpecified {
            get {
                return this.indexedFieldSpecified;
            }
            set {
                this.indexedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool inheritSecurity {
            get {
                return this.inheritSecurityField;
            }
            set {
                this.inheritSecurityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool internalVisualizer {
            get {
                return this.internalVisualizerField;
            }
            set {
                this.internalVisualizerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool internalVisualizerSpecified {
            get {
                return this.internalVisualizerFieldSpecified;
            }
            set {
                this.internalVisualizerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isEncrypted {
            get {
                return this.isEncryptedField;
            }
            set {
                this.isEncryptedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isEncryptedSpecified {
            get {
                return this.isEncryptedFieldSpecified;
            }
            set {
                this.isEncryptedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string keyWord {
            get {
                return this.keyWordField;
            }
            set {
                this.keyWordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string languageId {
            get {
                return this.languageIdField;
            }
            set {
                this.languageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string languageIndicator {
            get {
                return this.languageIndicatorField;
            }
            set {
                this.languageIndicatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime lastModifiedDate {
            get {
                return this.lastModifiedDateField;
            }
            set {
                this.lastModifiedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastModifiedDateSpecified {
            get {
                return this.lastModifiedDateFieldSpecified;
            }
            set {
                this.lastModifiedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastModifiedTime {
            get {
                return this.lastModifiedTimeField;
            }
            set {
                this.lastModifiedTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int metaListId {
            get {
                return this.metaListIdField;
            }
            set {
                this.metaListIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool metaListIdSpecified {
            get {
                return this.metaListIdFieldSpecified;
            }
            set {
                this.metaListIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int metaListRecordId {
            get {
                return this.metaListRecordIdField;
            }
            set {
                this.metaListRecordIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool metaListRecordIdSpecified {
            get {
                return this.metaListRecordIdFieldSpecified;
            }
            set {
                this.metaListRecordIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool newStructure {
            get {
                return this.newStructureField;
            }
            set {
                this.newStructureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool newStructureSpecified {
            get {
                return this.newStructureFieldSpecified;
            }
            set {
                this.newStructureFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool onCheckout {
            get {
                return this.onCheckoutField;
            }
            set {
                this.onCheckoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int parentDocumentId {
            get {
                return this.parentDocumentIdField;
            }
            set {
                this.parentDocumentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool parentDocumentIdSpecified {
            get {
                return this.parentDocumentIdFieldSpecified;
            }
            set {
                this.parentDocumentIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int permissionType {
            get {
                return this.permissionTypeField;
            }
            set {
                this.permissionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionTypeSpecified {
            get {
                return this.permissionTypeFieldSpecified;
            }
            set {
                this.permissionTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string phisicalFile {
            get {
                return this.phisicalFileField;
            }
            set {
                this.phisicalFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float phisicalFileSize {
            get {
                return this.phisicalFileSizeField;
            }
            set {
                this.phisicalFileSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phisicalFileSizeSpecified {
            get {
                return this.phisicalFileSizeFieldSpecified;
            }
            set {
                this.phisicalFileSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prioritySpecified {
            get {
                return this.priorityFieldSpecified;
            }
            set {
                this.priorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string privateColleagueId {
            get {
                return this.privateColleagueIdField;
            }
            set {
                this.privateColleagueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool privateDocument {
            get {
                return this.privateDocumentField;
            }
            set {
                this.privateDocumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool privateDocumentSpecified {
            get {
                return this.privateDocumentFieldSpecified;
            }
            set {
                this.privateDocumentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool protectedCopy {
            get {
                return this.protectedCopyField;
            }
            set {
                this.protectedCopyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool protectedCopySpecified {
            get {
                return this.protectedCopyFieldSpecified;
            }
            set {
                this.protectedCopyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string publisherId {
            get {
                return this.publisherIdField;
            }
            set {
                this.publisherIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string publisherName {
            get {
                return this.publisherNameField;
            }
            set {
                this.publisherNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string relatedFiles {
            get {
                return this.relatedFilesField;
            }
            set {
                this.relatedFilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int restrictionType {
            get {
                return this.restrictionTypeField;
            }
            set {
                this.restrictionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool restrictionTypeSpecified {
            get {
                return this.restrictionTypeFieldSpecified;
            }
            set {
                this.restrictionTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int rowId {
            get {
                return this.rowIdField;
            }
            set {
                this.rowIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int searchNumber {
            get {
                return this.searchNumberField;
            }
            set {
                this.searchNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool searchNumberSpecified {
            get {
                return this.searchNumberFieldSpecified;
            }
            set {
                this.searchNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int securityLevel {
            get {
                return this.securityLevelField;
            }
            set {
                this.securityLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string siteCode {
            get {
                return this.siteCodeField;
            }
            set {
                this.siteCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sociableDocumentDto sociableDocumentDto {
            get {
                return this.sociableDocumentDtoField;
            }
            set {
                this.sociableDocumentDtoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool tool {
            get {
                return this.toolField;
            }
            set {
                this.toolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool toolSpecified {
            get {
                return this.toolFieldSpecified;
            }
            set {
                this.toolFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int topicId {
            get {
                return this.topicIdField;
            }
            set {
                this.topicIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool topicIdSpecified {
            get {
                return this.topicIdFieldSpecified;
            }
            set {
                this.topicIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool translated {
            get {
                return this.translatedField;
            }
            set {
                this.translatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UUID {
            get {
                return this.uUIDField;
            }
            set {
                this.uUIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool updateIsoProperties {
            get {
                return this.updateIsoPropertiesField;
            }
            set {
                this.updateIsoPropertiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool userAnswerForm {
            get {
                return this.userAnswerFormField;
            }
            set {
                this.userAnswerFormField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userAnswerFormSpecified {
            get {
                return this.userAnswerFormFieldSpecified;
            }
            set {
                this.userAnswerFormFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool userNotify {
            get {
                return this.userNotifyField;
            }
            set {
                this.userNotifyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userNotifySpecified {
            get {
                return this.userNotifyFieldSpecified;
            }
            set {
                this.userNotifyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int userPermission {
            get {
                return this.userPermissionField;
            }
            set {
                this.userPermissionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userPermissionSpecified {
            get {
                return this.userPermissionFieldSpecified;
            }
            set {
                this.userPermissionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime validationStartDate {
            get {
                return this.validationStartDateField;
            }
            set {
                this.validationStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool validationStartDateSpecified {
            get {
                return this.validationStartDateFieldSpecified;
            }
            set {
                this.validationStartDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string versionDescription {
            get {
                return this.versionDescriptionField;
            }
            set {
                this.versionDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string versionOption {
            get {
                return this.versionOptionField;
            }
            set {
                this.versionOptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string visualization {
            get {
                return this.visualizationField;
            }
            set {
                this.visualizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string volumeId {
            get {
                return this.volumeIdField;
            }
            set {
                this.volumeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class sociableDocumentDto {
        
        private bool commentedField;
        
        private bool denouncedField;
        
        private int documentIdField;
        
        private bool documentIdFieldSpecified;
        
        private bool followingField;
        
        private bool likedField;
        
        private int numberCommentsField;
        
        private bool numberCommentsFieldSpecified;
        
        private int numberDenouncementsField;
        
        private bool numberDenouncementsFieldSpecified;
        
        private int numberFollowsField;
        
        private bool numberFollowsFieldSpecified;
        
        private int numberLikesField;
        
        private bool numberLikesFieldSpecified;
        
        private int numberSharesField;
        
        private bool numberSharesFieldSpecified;
        
        private bool sharedField;
        
        private long sociableIdField;
        
        private bool sociableIdFieldSpecified;
        
        private int versionField;
        
        private bool versionFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool commented {
            get {
                return this.commentedField;
            }
            set {
                this.commentedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool denounced {
            get {
                return this.denouncedField;
            }
            set {
                this.denouncedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentIdSpecified {
            get {
                return this.documentIdFieldSpecified;
            }
            set {
                this.documentIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool following {
            get {
                return this.followingField;
            }
            set {
                this.followingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool liked {
            get {
                return this.likedField;
            }
            set {
                this.likedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberComments {
            get {
                return this.numberCommentsField;
            }
            set {
                this.numberCommentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberCommentsSpecified {
            get {
                return this.numberCommentsFieldSpecified;
            }
            set {
                this.numberCommentsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberDenouncements {
            get {
                return this.numberDenouncementsField;
            }
            set {
                this.numberDenouncementsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberDenouncementsSpecified {
            get {
                return this.numberDenouncementsFieldSpecified;
            }
            set {
                this.numberDenouncementsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberFollows {
            get {
                return this.numberFollowsField;
            }
            set {
                this.numberFollowsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberFollowsSpecified {
            get {
                return this.numberFollowsFieldSpecified;
            }
            set {
                this.numberFollowsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberLikes {
            get {
                return this.numberLikesField;
            }
            set {
                this.numberLikesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberLikesSpecified {
            get {
                return this.numberLikesFieldSpecified;
            }
            set {
                this.numberLikesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberShares {
            get {
                return this.numberSharesField;
            }
            set {
                this.numberSharesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberSharesSpecified {
            get {
                return this.numberSharesFieldSpecified;
            }
            set {
                this.numberSharesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool shared {
            get {
                return this.sharedField;
            }
            set {
                this.sharedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long sociableId {
            get {
                return this.sociableIdField;
            }
            set {
                this.sociableIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sociableIdSpecified {
            get {
                return this.sociableIdFieldSpecified;
            }
            set {
                this.sociableIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool versionSpecified {
            get {
                return this.versionFieldSpecified;
            }
            set {
                this.versionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class approvalLevelDto {
        
        private int approvalModeField;
        
        private string levelDescriptionField;
        
        private int levelIdField;
        
        private bool mandatorySignatureField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int approvalMode {
            get {
                return this.approvalModeField;
            }
            set {
                this.approvalModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string levelDescription {
            get {
                return this.levelDescriptionField;
            }
            set {
                this.levelDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int levelId {
            get {
                return this.levelIdField;
            }
            set {
                this.levelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mandatorySignature {
            get {
                return this.mandatorySignatureField;
            }
            set {
                this.mandatorySignatureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class approverDto {
        
        private int approverTypeField;
        
        private string colleagueIdField;
        
        private long companyIdField;
        
        private int documentIdField;
        
        private string[] fooField;
        
        private int levelIdField;
        
        private int versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int approverType {
            get {
                return this.approverTypeField;
            }
            set {
                this.approverTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string colleagueId {
            get {
                return this.colleagueIdField;
            }
            set {
                this.colleagueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("foo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] foo {
            get {
                return this.fooField;
            }
            set {
                this.fooField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int levelId {
            get {
                return this.levelIdField;
            }
            set {
                this.levelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class documentSecurityConfigDto {
        
        private int attributionTypeField;
        
        private bool attributionTypeFieldSpecified;
        
        private string attributionValueField;
        
        private long companyIdField;
        
        private int documentIdField;
        
        private bool downloadEnabledField;
        
        private bool downloadEnabledFieldSpecified;
        
        private string[] fooField;
        
        private bool permissionField;
        
        private bool permissionFieldSpecified;
        
        private int securityLevelField;
        
        private bool securityLevelFieldSpecified;
        
        private bool securityVersionField;
        
        private bool securityVersionFieldSpecified;
        
        private int sequenceField;
        
        private bool showContentField;
        
        private bool showContentFieldSpecified;
        
        private int versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int attributionType {
            get {
                return this.attributionTypeField;
            }
            set {
                this.attributionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool attributionTypeSpecified {
            get {
                return this.attributionTypeFieldSpecified;
            }
            set {
                this.attributionTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string attributionValue {
            get {
                return this.attributionValueField;
            }
            set {
                this.attributionValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool downloadEnabled {
            get {
                return this.downloadEnabledField;
            }
            set {
                this.downloadEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool downloadEnabledSpecified {
            get {
                return this.downloadEnabledFieldSpecified;
            }
            set {
                this.downloadEnabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("foo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] foo {
            get {
                return this.fooField;
            }
            set {
                this.fooField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permission {
            get {
                return this.permissionField;
            }
            set {
                this.permissionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permissionSpecified {
            get {
                return this.permissionFieldSpecified;
            }
            set {
                this.permissionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int securityLevel {
            get {
                return this.securityLevelField;
            }
            set {
                this.securityLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool securityLevelSpecified {
            get {
                return this.securityLevelFieldSpecified;
            }
            set {
                this.securityLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool securityVersion {
            get {
                return this.securityVersionField;
            }
            set {
                this.securityVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool securityVersionSpecified {
            get {
                return this.securityVersionFieldSpecified;
            }
            set {
                this.securityVersionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool showContent {
            get {
                return this.showContentField;
            }
            set {
                this.showContentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool showContentSpecified {
            get {
                return this.showContentFieldSpecified;
            }
            set {
                this.showContentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class webServiceMessage {
        
        private long companyIdField;
        
        private string documentDescriptionField;
        
        private int documentIdField;
        
        private string[] fooField;
        
        private int versionField;
        
        private string webServiceMessage1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentDescription {
            get {
                return this.documentDescriptionField;
            }
            set {
                this.documentDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("foo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] foo {
            get {
                return this.fooField;
            }
            set {
                this.fooField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("webServiceMessage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string webServiceMessage1 {
            get {
                return this.webServiceMessage1Field;
            }
            set {
                this.webServiceMessage1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.dm.webdesk.technology.datasul.com/")]
    public partial class approverWithLevelDto {
        
        private int approverTypeField;
        
        private string colleagueIdField;
        
        private long companyIdField;
        
        private int documentIdField;
        
        private string[] fooField;
        
        private int levelIdField;
        
        private int versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int approverType {
            get {
                return this.approverTypeField;
            }
            set {
                this.approverTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string colleagueId {
            get {
                return this.colleagueIdField;
            }
            set {
                this.colleagueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int documentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("foo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] foo {
            get {
                return this.fooField;
            }
            set {
                this.fooField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int levelId {
            get {
                return this.levelIdField;
            }
            set {
                this.levelIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getUserPermissionsCompletedEventHandler(object sender, getUserPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getFolderCompletedEventHandler(object sender, getFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getApproversCompletedEventHandler(object sender, getApproversCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApproversCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApproversCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public approverWithLevelDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((approverWithLevelDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void findRecycledDocumentsCompletedEventHandler(object sender, findRecycledDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findRecycledDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findRecycledDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getSubPrivateFoldersCompletedEventHandler(object sender, getSubPrivateFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubPrivateFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubPrivateFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void restoreDocumentCompletedEventHandler(object sender, restoreDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class restoreDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal restoreDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createFolderCompletedEventHandler(object sender, createFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getSubFoldersOnDemandCompletedEventHandler(object sender, getSubFoldersOnDemandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubFoldersOnDemandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubFoldersOnDemandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getChildrenCompletedEventHandler(object sender, getChildrenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getChildrenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getChildrenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void destroyDocumentCompletedEventHandler(object sender, destroyDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class destroyDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal destroyDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateFolderCompletedEventHandler(object sender, updateFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getSubFoldersPermissionCompletedEventHandler(object sender, getSubFoldersPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubFoldersPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubFoldersPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateFolderWithApprovementLevelsCompletedEventHandler(object sender, updateFolderWithApprovementLevelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateFolderWithApprovementLevelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateFolderWithApprovementLevelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void deleteDocumentCompletedEventHandler(object sender, deleteDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getPrivateChildrenCompletedEventHandler(object sender, getPrivateChildrenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPrivateChildrenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPrivateChildrenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getSecurityCompletedEventHandler(object sender, getSecurityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSecurityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSecurityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentSecurityConfigDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentSecurityConfigDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getRootFoldersCompletedEventHandler(object sender, getRootFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRootFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRootFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createFolderWithApprovementLevelsCompletedEventHandler(object sender, createFolderWithApprovementLevelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createFolderWithApprovementLevelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createFolderWithApprovementLevelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getSubFoldersCompletedEventHandler(object sender, getSubFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public documentDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((documentDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateSimpleFolderCompletedEventHandler(object sender, updateSimpleFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSimpleFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSimpleFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createSimpleFolderCompletedEventHandler(object sender, createSimpleFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSimpleFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSimpleFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webServiceMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webServiceMessage[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591